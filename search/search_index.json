{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Discarpet documentation!","text":"<p>This is an extension for Carpet that adds parts of Discord's bot API into scarpet, allowing you to script Discord bots that run within and interact with Minecraft.</p> <p>If you need any help, you can join my Discord server and ask in the #discarpet channel.</p> <p> Download from Modrinth</p> <p> Getting started</p> <p> Example scripts</p> <p> How it works</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#1.6.1","title":"1.6.1 \u2013 June 23, 2025","text":"<ul> <li>Improved handling of error messages of api_exceptions based on JDA exceptions</li> </ul>"},{"location":"changelog/#1.6.0","title":"1.6.0 \u2013 May 25, 2025","text":"<p>Due to the sunsetting of Javacord, this mod migrated to JDA, which meant that introducing breaking changes was inevitable, so I chose to use this update to add more improvements that introduce breaking changes.</p> <p>The naming convention of \"parsables\" in the documentation and changelogs have changed. These map values used as function parameters are now referred to as \"schemas\" or \"objects\". A \"schema\" is the format of the fields a parsable has, while an \"object\" will be referred to as a map value following that schema.</p>"},{"location":"changelog/#breaking-changes","title":"Breaking changes","text":"<p>The following changes may break existing scripts. Make sure to update them to work with this new discarpet version.</p>"},{"location":"changelog/#event-changes","title":"Event changes","text":"<p>Due to JDA having no built-in message caching, the following events were changed:</p> <ul> <li>The <code>__on_discord_message_edit</code> event now no longer provides the previous message and whether it was actually edited</li> <li>The <code>__on_discord_message_delete</code> now only gives the deleted message id and the channel object instead of the message object</li> </ul>"},{"location":"changelog/#function-changes","title":"Function changes","text":"<ul> <li>The channel or message for creating a thread is no longer provided in the schema (previously \"parsable\"), but as an argument to <code>dc_create_thread</code></li> <li><code>dc_react</code> has been split to <code>dc_add_reaction(msg, emoji)</code> and <code>dc_remove_reaction(msg, emoji?, user?)</code></li> <li><code>dc_set_channel_topic</code> was removed in favor of the new <code>dc_update_channel</code></li> <li>Removed <code>dc_get_display_name</code> in favor of <code>member~'effective_name'</code></li> <li>Removed <code>dc_get_timeout</code> in favor of <code>member~'timeout_end'</code></li> <li>Removed <code>dc_get_user_color</code> in favor of <code>member~'color'</code></li> <li>Removed <code>dc_get_user_roles</code> in favor of <code>member~'roles'</code></li> <li>Added <code>dc_update_presence()</code> to replace <code>dc_set_status()</code> and <code>dc_set_activity()</code></li> </ul>"},{"location":"changelog/#value-changes","title":"Value changes","text":"<ul> <li>The command value types are now all the same value type <code>dc_command</code> and can be distinguished with <code>command~'type'</code></li> <li>Removed <code>user~'discriminated_name</code>, since discriminators are phased out by discord</li> <li>Replaced <code>reaction~'message'</code> with <code>reaction~'message_id'</code> since messages are not cached anymore</li> <li><code>slash_command_interaction~'arguments'</code> and <code>slash_command_interaction~'arguments_by_name'</code>   no longer include the subcommand and subcommand group.   Additionally, <code>slash_command_interaction_option~'options'</code> was removed,   since subcommand groups and subcommands are no longer expressed as nested options,   but can be retrieved using <code>interaction~'sub_command'</code> or <code>~'sub_command_group'</code>.</li> <li>Replaced <code>~'is_subcommand_or_group'</code> in slash command interaction option values with <code>~'type'</code></li> </ul>"},{"location":"changelog/#schema-changes","title":"Schema changes","text":"<ul> <li>Replaced <code>thread</code> schema <code>channel_type</code> with <code>is_private</code>.</li> <li>Changes to message content schema</li> <li>Renamed <code>reply_to</code> to <code>referenced_message</code> since it can now also used to forward messages</li> <li>Added <code>message_reference_type</code> which can be set to <code>forward</code> to forward messages instead of replying</li> <li>Made <code>content</code> field optional for messages without content, like forwarded messages</li> <li>The <code>file</code>, <code>url</code>, <code>bytes</code>, and <code>image</code> fields of the attachment schema have been moved to a <code>file</code> parsable</li> <li>The <code>file</code> field is now no longer a system file path, but a scarpet resource path, just like it is used in scarpet's <code>read_file</code>.</li> <li><code>bytes</code> has been renamed to <code>string</code></li> <li>The following fields of schemas now use the <code>file</code> schema (see above)</li> <li><code>thumbnail</code> and <code>image</code> in <code>embed</code></li> <li><code>icon</code> in <code>embed_author</code> and <code>embed_footer</code></li> <li><code>avatar</code> in <code>webhook_profile</code> and <code>webhook_profile_updater</code></li> </ul>"},{"location":"changelog/#type-strings","title":"Type strings","text":"<p>ALL type strings are now returned in lowercase. Additionally, the type fields of schemas are now all case-insensitive, so you can interchangeably use upper or lower case strings everywhere.</p> <p>Most values returned by the <code>~'type'</code> queries of values are now also different:</p>"},{"location":"changelog/#type-strings_1","title":"<code>~'type'</code> strings","text":"<p>The <code>type</code>s of a channel value have changed:</p> <ul> <li><code>SERVER_TEXT_CHANNEL</code> -&gt; <code>text</code></li> <li><code>SERVER_VOICE_CHANNEL</code> -&gt; <code>voice</code></li> <li><code>SERVER_FORUM_CHANNEL</code> -&gt; <code>forum</code></li> <li><code>SERVER_STAGE_VOICE_CHANNEL</code> -&gt; <code>stage</code></li> <li><code>SERVER_NEWS_CHANNEL</code> -&gt; <code>news</code></li> <li><code>SERVER_STORE_CHANNEL</code> -&gt; removed</li> <li><code>SERVER_PUBLIC_THREAD</code> -&gt; <code>guild_public_thread</code></li> <li><code>SERVER_PRIVATE_THREAD</code> -&gt; <code>guild_private_thread</code></li> <li><code>SERVER_NEWS_THREAD</code> -&gt; <code>guild_news_thread</code></li> <li><code>PRIVATE_CHANNEL</code> -&gt; <code>private</code></li> <li><code>GROUP_CHANNEL</code> -&gt; <code>group</code></li> <li><code>CHANNEL_CATEGORY</code> -&gt; <code>category</code></li> <li><code>SERVER_DIRECTORY_CHANNEL</code> -&gt; removed</li> <li> <ul> <li>-&gt; <code>media</code></li> </ul> </li> </ul> <p>Other changes:</p> <ul> <li><code>webhook~'type'</code> <code>CHANNEL_FOLLOWER</code> changed to <code>follower</code></li> <li><code>sticker~'type'</code> <code>SERVER</code> changed to <code>guild</code></li> </ul>"},{"location":"changelog/#schema-type-strings","title":"Schema type strings","text":"<p>The <code>component</code> type in a component schema have partially different names now:</p> <ul> <li><code>BUTTON</code> -&gt; <code>button</code></li> <li><code>SELECT_MENU_STRING</code> -&gt; <code>string_select</code></li> <li><code>SELECT_MENU_USER</code> -&gt; <code>user_select</code></li> <li><code>SELECT_MENU_ROLE</code> -&gt; <code>role_select</code></li> <li><code>SELECT_MENU_MENTIONABLE</code> -&gt; <code>mentionable_select</code></li> <li><code>SELECT_MENU_CHANNEL</code> -&gt; <code>channel_select</code></li> <li><code>TEXT_INPUT</code> -&gt; <code>text_input</code></li> </ul> <p>The <code>style</code> of the button schema is now no longer the color name, but the types name as discord refers to them:</p> <ul> <li><code>BLURPLE</code> -&gt; <code>primary</code></li> <li><code>GREY</code> -&gt; <code>secondary</code></li> <li><code>GREEN</code> -&gt; <code>success</code></li> <li><code>RED</code> -&gt; <code>danger</code></li> <li><code>URL</code> -&gt; <code>link</code></li> </ul>"},{"location":"changelog/#other-breaking-changes","title":"Other breaking changes","text":"<ul> <li>Exception hierarchy and values have changed</li> </ul>"},{"location":"changelog/#new-features","title":"New features","text":"<ul> <li>Added <code>slash_command_interaction~'subcommand'</code> and <code>slash_command_interaction~'subcommand_group'</code></li> <li>Added <code>channel_types</code> to select menu schema</li> <li>Added <code>mention_channels</code>, <code>mention_emojis</code>, <code>mention_slash_commands</code>, <code>mention_here</code> fields to allowed mentions schema</li> <li>Added <code>mention_replied_user</code> to allowed mentions</li> <li>Emoji fields in schemas now support many more string notations</li> <li>Added <code>dc_remove_reaction(msg, emoji?, user?)</code></li> <li>Added <code>message~'stripped_content'</code></li> <li>Added <code>message~'stickers'</code></li> <li>Added <code>emoji~'type'</code></li> <li>Added <code>reaction~'channel'</code> and <code>reaction~'server'</code></li> <li>Added <code>respond_later_data</code> schema to third parameter of <code>dc_respond_interaction</code> when using type <code>respond_later</code> to specify ephemeral.</li> </ul>"},{"location":"changelog/#new-file-schema","title":"New file schema","text":"<p>Added a new <code>file</code> schema for specifying the source of a file</p> <ul> <li>It uses some of the same fields previously found in the <code>attachment</code> schema</li> <li>The <code>file</code> field is now no longer a system file path, but a scarpet resource path, just like it is used in scarpet's <code>read_file</code>.</li> <li><code>bytes</code> has been renamed to <code>string</code></li> <li><code>base64</code> was added as a way to provide data for the file</li> <li>This is now used for the following fields of schemas:</li> <li><code>thumbnail</code> and <code>image</code> in <code>embed</code></li> <li><code>icon</code> in <code>embed_author</code> and <code>embed_footer</code></li> <li><code>avatar</code> in <code>webhook_profile</code> and <code>webhook_profile_updater</code></li> <li>The <code>file</code>, <code>url</code>, <code>bytes</code> and <code>image</code> fields of the <code>attachment</code> field have been replaced with a single <code>file</code> field.</li> </ul>"},{"location":"changelog/#new-member-value","title":"New member value","text":"<p>Added <code>dc_member</code> value type, referencing a user in a server. This can be used to retrieve data of a user specific to a server, like nicknames and roles. In order to retrieve this value, the following has been added:</p> <ul> <li>Added <code>message~'member'</code></li> <li>Added <code>message~'member'</code></li> <li>Added <code>interaction~'member'</code></li> <li>Added <code>role~'members'</code></li> <li>Added <code>server~'members'</code></li> <li>Added <code>channel~'position</code></li> <li>Added <code>dc_member_from_user(user, server)</code> function for retrieving a member from the user and server.</li> </ul>"},{"location":"changelog/#update-channel-function","title":"Update channel function","text":"<ul> <li>Added <code>dc_update_channel</code>, replacing <code>dc_set_channel_topic</code>, allowing to update many options of channels.</li> <li>Added <code>channel_updater</code> schema.</li> </ul>"},{"location":"changelog/#1.5.6","title":"1.5.6 \u2013 March 31, 2025","text":"<ul> <li>Updated to 1.21.5</li> <li>New behaviour for errors while executing API requests.   Previously, functions would return <code>true</code> or <code>false</code> (sometimes <code>null</code> or a value)   to indicate success or failure. Now those functions no longer return anything   (or only return a value) and instead throw custom discarpet exceptions that can be caught using <code>try()</code>.   This affects the following functions and queries:<ul> <li>These functions no longer return a boolean value to indicate success and will instead throw an exception when an error occured:<ul> <li><code>dc_set_channel_topic</code></li> <li><code>dc_react</code></li> <li><code>dc_set_nickname</code></li> <li><code>dc_add_role</code></li> <li><code>dc_remove_role</code></li> <li><code>dc_set_name</code></li> <li><code>dc_delete</code></li> </ul> </li> <li>These functions will now throw an exception instead of returning null. When successful they will return a value:<ul> <li><code>dc_send_message</code></li> <li><code>dc_send_webhook</code></li> <li><code>dc_create_webhook</code></li> <li><code>dc_update_webhook</code></li> <li><code>dc_create_thread</code></li> <li><code>dc_create_application_command</code></li> <li><code>dc_get_global_application_commands</code></li> <li><code>dc_user_from_id</code></li> <li><code>dc_message_from_id</code></li> <li><code>dc_webhook_from_id</code></li> <li><code>dc_webhook_from_url</code></li> </ul> </li> <li>These actions now properly handle errors and throw exceptions on failure:<ul> <li><code>attachment~'download'</code></li> <li><code>channel~'webhooks'</code></li> <li><code>server~'webhooks'</code></li> <li><code>server~'slash_commands'</code></li> <li><code>user~'private_channel'</code></li> </ul> </li> <li>Special cases:<ul> <li><code>dc_respond_interaction</code> can still return <code>null</code> when the response type doesn't create a message. In all other cases it will either throw an exception or return a <code>Message</code></li> </ul> </li> </ul> </li> <li>Added events:<ul> <li><code>__on_discord_message(message, old_message, is_actual_edit)</code></li> <li><code>__on_discord_message_delete(message)</code></li> <li><code>__on_discord_server_member_join(server, user)</code></li> <li><code>__on_discord_server_member_leave(server, user)</code></li> </ul> </li> <li>Fully removed the deprecated function <code>dc_create_slash_command</code>. Use <code>dc_create_application_command</code> instead</li> <li>Improved reloading of bots</li> <li>Split <code>dc_timeout</code> into <code>dc_get_timeout</code> and <code>dc_set_timeout</code></li> </ul>"},{"location":"changelog/#1.5.5+2","title":"1.5.5 \u2013 November 9, 2024","text":"<ul> <li>Fixed errors on Minecraft 1.21.3</li> </ul>"},{"location":"changelog/#1.5.5+1","title":"1.5.5 \u2013 April 23, 2024","text":"<ul> <li>Update to Minecraft 1.20.5</li> </ul>"},{"location":"changelog/#1.5.4","title":"1.5.4 \u2013 December 11, 2023","text":"<ul> <li>Updated to MC 1.20.4</li> </ul>"},{"location":"changelog/#1.5.3","title":"1.5.3 \u2013 November 13, 2023","text":"<ul> <li>Added new sticker value type</li> <li>Added <code>dc_sticker_from_id(stickerId)</code></li> <li>Added new query options:</li> <li>message~'webhook_id'<ul> <li><code>emoji~'id'</code></li> <li><code>server~'emojis'</code></li> <li><code>server~'stickers'</code></li> <li><code>message~'sticker_ids'</code></li> </ul> </li> <li>Added <code>stickers</code> field to message content parsable</li> </ul>"},{"location":"changelog/#1.5.2","title":"1.5.2 \u2013 November 8, 2023","text":"<ul> <li>Added new properties to message values:<ul> <li><code>referenced_message</code></li> <li><code>type</code></li> <li><code>link</code></li> <li><code>flags</code></li> <li><code>creation_timestamp</code></li> <li><code>edit_timestamp</code></li> <li><code>position</code></li> </ul> </li> </ul>"},{"location":"changelog/#1.5.1","title":"1.5.1 \u2013 September 7, 2023","text":"<ul> <li>Fixed discarpet loading events too early, causing log spam with modded entities (#42)</li> <li>Removed <code>__on_command_executed</code> in favor of builtin <code>__on_player_command</code></li> <li>Server voice channels can now be used for sending messages into the buildin text-in-voice channel</li> <li>Added suppress_notifications to the message content parsable</li> </ul>"},{"location":"changelog/#1.5.0","title":"1.5.0 \u2013 June 7, 2023","text":"<ul> <li>Updated to Minecraft 1.20</li> <li>Reloading bots will now no longer freeze the game</li> <li>Improved error handling of the /discarpet command</li> </ul>"},{"location":"changelog/#1.4.9","title":"1.4.9 \u2013 March 20, 2023","text":"<ul> <li>Updated to Minecraft 1.19.4</li> </ul>"},{"location":"changelog/#1.4.8","title":"1.4.8 \u2013 February 15, 2023","text":"<ul> <li>Updated to minecraft 1.19.3</li> <li>Added support for user, channel, mentionable and role select menus</li> <li>Added new <code>component_type</code> property to select menu interaction values for distinguishing between different select menus</li> <li>Added <code>nsfw</code> property to channel values</li> <li>Changed docs to be more consistent and correct for interaction value types</li> </ul>"},{"location":"changelog/#1.4.7","title":"1.4.7 \u2013 October 19, 2022","text":"<ul> <li>Fixed (#38)[https://github.com/replaceitem/carpet-discarpet/issues/38]</li> <li>Changed the maven group to <code>net.replaceitem</code></li> </ul>"},{"location":"changelog/#1.4.6","title":"1.4.6 \u2013 August 12, 2022","text":"<ul> <li>Added <code>dc_create_thread</code> function</li> <li>Added <code>thread</code> parsable</li> <li>Improved error message in some cases for parsables</li> <li>Using new internal enum parser for parsables</li> </ul>"},{"location":"changelog/#1.4.5","title":"1.4.5 \u2013 July 29, 2022","text":"<ul> <li>Updated to Minecraft 1.19.1</li> <li>Fixed webhook profile and webhook profile updater parsable throwing an error when not using an avatar</li> <li>The <code>text</code> argument <code>__on_system_message</code> is now a formatted text value, which allows for better parsing using `encode_json(text)``</li> </ul>"},{"location":"changelog/#1.4.4","title":"1.4.4 \u2013 July 27, 2022","text":"<ul> <li>Improved config loading by adding missing config entries on startup</li> <li>Fix errors when events trigger when the server is starting or stopping</li> <li>Bumped dependency versions (This fixes the server not fully terminating after the world saved)</li> </ul>"},{"location":"changelog/#1.4.3","title":"1.4.3 \u2013 July 12, 2022","text":""},{"location":"changelog/#breaking-changes_1","title":"BREAKING CHANGES:","text":"<ul> <li>Intents are no longer boolean values, but a list of strings instead (See Setup)</li> <li><code>dc_get_global_slash_commands</code> got renamed to <code>dc_get_global_application_commands</code> and now returns all types of commands</li> <li><code>dc_create_slash_command()</code> got renamed to <code>dc_create_application_command()</code> and has an additional <code>type</code> argument, and returns the application command value instead of a boolean now</li> <li><code>slash_command~'id'</code> now returns the interaction id, instead of the slash command id. Use <code>slash_command~'command_id'</code> instead</li> <li>The string representation of all discord values is now no longer the type name, but a custom string</li> </ul>"},{"location":"changelog/#other-changes","title":"Other changes:","text":"<ul> <li>Added <code>message_context_menu_builder</code> and <code>user_context_menu_builder</code> parsable</li> <li>Added <code>dc_message_context_menu</code> and <code>dc_user_context_menu</code> values</li> <li>Added <code>dc_message_context_menu_interaction</code> and <code>dc_user_context_menu_interaction</code> values</li> <li>Added <code>ephemeral</code> and <code>suppress_embeds</code> fields to <code>message_content</code> parsable</li> <li><code>dc_create_application_command</code> now works with message context menu and user context menu commands</li> <li>Fixed modal parsable internally being called <code>embed</code></li> <li>Internally, renamed <code>instant</code> parsable to <code>timestamp</code> to match docs</li> </ul>"},{"location":"changelog/#revamped-documentation","title":"Revamped documentation","text":"<ul> <li>The docs have moved to https://replaceitem.github.io/carpet-discarpet/</li> <li>All functions, values, parsables, events and examples have their own page now</li> <li>Added internal parsable names to the docs</li> <li>Added documentation on <code>dc_get_global_application_commands()</code> which was missing</li> <li>Many many more changes and polishes to docs</li> </ul>"},{"location":"how-it-works/","title":"How it works","text":"<p>Discarpet wraps around Javacord with new scarpet functions, values, and events. It also uses map values with predefined schemas as a way to define more complex things like embeds, slash commands, or message components.</p>"},{"location":"how-it-works/#discarpet-values","title":"Discarpet values","text":""},{"location":"how-it-works/#querying-values","title":"Querying values","text":"<p>Each value has things that can be queried from them. This works similar to scarpet's entity value. For example, in scarpet you can get an entity's health using <code>entity~'health'</code>.</p> <p>Discarpet works the same. For example, you can get the channel where a message was sent using <code>message~'channel'</code>. Properties that can be queried from a value are listed in their documentation page.</p>"},{"location":"how-it-works/#type-names","title":"Type names","text":"<p>All type names of Discarpet values are prefixed with <code>dc_</code> to easily associate them with Discarpet. You can get a value's type using scarpet's <code>type()</code> function. The type name of a value also is listed in their documentation page.</p>"},{"location":"how-it-works/#getting-values","title":"Getting values","text":"<p>You can use the appropriate function under \"Value functions\" to get the value you need.</p> <p>Most value functions require you to input an ID. See here for how to get IDs.</p> <p>Some values can also give you other values.</p>"},{"location":"how-it-works/#discarpet-object-schemas","title":"Discarpet object schemas","text":"<p>Many functions in Discarpet have parameters that use scarpet map values. This works like objects in JavaScripts. Discarpet defines schemas for these objects.</p> <p>As an example, here is how you would send a discord message with text and an embed.</p> <pre><code>dc_send_message(channel, {\n    'content' -&gt; 'Hello world!',\n    'embeds' -&gt; [\n        {\n            'title' -&gt; 'Example embed',\n            'description' -&gt; 'This is an example embed',\n        }\n    ],\n});\n</code></pre> <p>The properties of those schemas and their types are listed in the documentation of each object schema. This example uses the Message content schema and Embed schema.</p> <p>As an example, a schema with these properties:</p> Key Type Description <code>name</code> String The name of the player. <code>id</code> String The ID of the player. <code>size</code> Number The size of the player. <code>hidden</code> Boolean Whether this player is hidden.(<code>false</code> by default) <p>could look like this:</p> <pre><code>example = {\n    'name' -&gt; 'replaceitem',\n    'id' -&gt; '1234567890',\n    'size' -&gt; 4,\n    'hidden' -&gt; true\n};\n</code></pre>"},{"location":"how-it-works/#discarpet-exceptions","title":"Discarpet exceptions","text":"<p>When using a function or querying something, it may fail for whatever reason and throw an uncaught exception.</p> <p>Some document pages mention if they can throw an uncaught exception, sometimes with additional details and a brief explanation as to why it happened.</p> <p>All Discarpet exceptions can be caught under <code>discord_exception</code> using the <code>try</code> function.</p>"},{"location":"how-it-works/#exception-hierarchy","title":"Exception hierarchy","text":"<ul> <li><code>exception</code> (Base scarpet exception)<ul> <li><code>discord_exception</code> (Base Discarpet exception)<ul> <li><code>api_exception</code> The discord api replied that this request has failed</li> <li><code>missing_permission</code> You do not have the permission to do that</li> <li><code>rate_limit</code> You sent too many requests within a short timespan<sup>1</sup></li> <li><code>http_exception</code> The request failed before reaching the discord api</li> </ul> </li> </ul> </li> </ul>"},{"location":"how-it-works/#accessing-exceptions","title":"Accessing exceptions","text":"<p>The exception value can be accessed like this:</p> Getting exception details<pre><code>test() -&gt; (\n    dc_send_message(global_channel, 'hello world!');\n);\n\ntry(test(), 'discord_exception', print(_));\n</code></pre>"},{"location":"how-it-works/#api_exception","title":"<code>api_exception</code>","text":"<p>For the <code>api_exception</code> type, the exception value is a map of details about the error:</p> <ul> <li><code>message</code> - The message for the <code>code</code></li> <li><code>code</code> - The Discord status code according to   this list.</li> <li><code>body</code> - The contents of the HTTP response body directly from discord.</li> </ul> Example api_exception exception value<pre><code>{\n    'code' -&gt; 400,\n    'message' -&gt; '...',\n    'body' -&gt; {\n        ...\n    }\n}\n</code></pre>"},{"location":"how-it-works/#missing_permission","title":"<code>missing_permission</code>","text":"<p>For the <code>missing_permission</code> type, the exception value is a map of details about the error:</p> <ul> <li><code>message</code> - The message of the exception</li> <li><code>permission</code> - The permission name that was missing</li> <li><code>server</code> - The server id where the permission was missing.</li> <li><code>channel</code> - The channel id where the permission was missing.</li> </ul> Example api_exception exception value<pre><code>{\n    'code' -&gt; 400,\n    'message' -&gt; '...',\n    'server' -&gt; '012345678901234567',\n    'channel' -&gt; '123456789012345678',\n}\n</code></pre>"},{"location":"how-it-works/#blocking-functions-and-properties","title":"Blocking functions and properties","text":"<p>Some functions/properties may freeze your game temporarily when invoking/querying them.</p> <p>Make sure to wrap them in a <code>task</code> to avoid freezing your game.</p> <ol> <li> <p>This exception is pretty rare, since Javacord will queue requests to avoid rate limits.   If far too many requests are sent, you might hit the limit anyway.\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/","title":"Getting started","text":""},{"location":"setup/#setting-up-a-bot","title":"Setting up a bot","text":""},{"location":"setup/#discord-setup","title":"Discord setup","text":"<p>Firstly, you'll need to have a Discord bot account to use.</p> <p>If you have already done this, you can go setup Minecraft next. If you haven't, here's some quick steps:</p> <ol> <li>Go to the Discord Developer Portal, and click on the button \"Add Application\" at the top right. A prompt should pop up.</li> <li>Type in the name prompt, click on the checkbox, then click on \"Create\".    (Whatever you put on as the name doesn't matter, as it is separate from the bot's username)</li> <li>After creating an application, you should be on its settings page. Navigate to the \"Bot\" tab from the sidebar.    From there, you may change your bot's username &amp; profile picture.</li> <li>Generate your bot's token by clicking \"Reset Token\". It may ask you for authorization. Then, copy it.    Paste your token somewhere safe temporarily (like in a Notepad window).    Do not share it with untrustworthy people!</li> <li>Navigate to the \"OAuth2\" tab. Copy the client ID, then append it to this URL at the end:    <code>https://discord.com/oauth2/authorize?scope=bot&amp;client_id=</code> Then, open your URL in your browser. It should prompt you what server to add the bot.</li> <li>Select the server where you want to add the bot to, then click on \"Authorize\".</li> </ol> <p>If things didn't go wrong, you've got a Discord bot into your server! Very nice!</p>"},{"location":"setup/#minecraft-setup","title":"Minecraft setup","text":"<p>Note</p> <p>Singleplayer usage is not officially supported. It may, or may not work.</p> <p>Firstly, setup a Fabric server. Then, you'll need to install Carpet and Discarpet in your server's mods folder.</p> <p>When you restart your server, it should create a <code>discarpet.json</code> file in the config folder. The file should look like this by default:</p> discarpet.json<pre><code>{\n  \"bots\": [\n    {\n      \"bot_id\": \"Your bot ID\",\n      \"bot_token\": \"Your bot token\",\n      \"intents\": [],\n      \"member_cache_policy\": \"all\"\n    }\n  ]\n}\n</code></pre> <p>To add your bot to the config, paste your bot's token into the <code>\"bot_token\"</code> field.</p> <p>The <code>\"bot_id\"</code> is an arbitrary name used to identify your bot in scarpet later. This doesn't need to be what you called it in the Developer Portal, it's just an arbitrary name.</p> <p>In the <code>\"intents\"</code> list, you can add additional intents for your bot. For more info, see the section about intents.</p> <p>Now your config should look something like this:</p> discarpet.json<pre><code>{\n  \"bots\": [\n    {\n      \"bot_id\": \"mybot\",\n      \"bot_token\": \"xxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n      \"intents\": [],\n      \"member_cache_policy\": \"all\"\n    }\n  ]\n}\n</code></pre> <p>Now, you can use the in-game command <code>/discarpet reload</code> to reload all the bots, and start new ones if you added one to the config. This command will tell you whether the bots could be logged in or not.</p> <p>When login was successful, you can use <code>/discarpet getInvite [bot id]</code> to get a link in chat, which upon clicking, will take you directly to the webpage where you can add the bot to any Discord server you have the \"Manage Server\" permission in.</p>"},{"location":"setup/#setting-up-a-script","title":"Setting up a script","text":"<p>If you have never used scarpet before, it's recommended to first get familiar with the scarpet language.</p> <p>To use your bot in your script, you'll need to set the <code>'bot'</code> value inside the <code>__config</code> function.</p> <p>Additionally, it is best to set the <code>'scope'</code> to <code>'global'</code>.</p> my_script.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n</code></pre> <p>The <code>'bot'</code> value is specified from your bot's ID in the config. Without setting a valid bot and the scope globally, most Discarpet functions and events will not work, and will throw errors.</p>"},{"location":"setup/#using-intents","title":"Using intents","text":"<p>In Discarpet's config, you can enable privileged intents for your bot to have access to certain things:</p> <ul> <li><code>MESSAGE_CONTENT</code> - Required to access some properties from a message.   (<code>content</code>, <code>readable_content</code>, <code>attachments</code>)</li> <li><code>GUILD_MEMBERS</code> - Required to access a list of users from a server.</li> <li><code>GUILD_PRESENCES</code> - You can ignore this one. This intent is currently not utilized by Discarpet.</li> </ul> <p>You can add them to your bot like so:</p> discarpet.json<pre><code>{\n  \"bots\": [\n    {\n      \"bot_id\": \"mybot\",\n      \"bot_token\": \"token\",\n      \"intents\": [\n        \"MESSAGE_CONTENT\",\n        \"GUILD_MEMBERS\"\n      ],\n      \"member_cache_policy\": \"all\"\n    }\n  ]\n}\n</code></pre> <p>If you add these intents to the <code>\"intents\"</code> list in your bot config, you will also need to enable them in Discord as well. You can enable them in the Developer Portal under your application's \"Bots\" tab.</p>"},{"location":"setup/#changing-the-member-caching-policy","title":"Changing the member caching policy","text":"<p>By default, all online members of all servers are cached. This means you usually have access to the details of all online server members in all servers the bot is in without having to request them. This may be changed with the <code>member_cache_policy</code> config option if you do not need the details of all members to save on resources. It can be set to the following values:</p> <ul> <li><code>all</code>: Cache all members</li> <li><code>online</code>: Cache only online members (default)</li> <li><code>voice</code>: Cache only online/idle/dnd members</li> <li><code>pending</code>: Caches members who haven't passed Membership Screening</li> <li><code>booster</code>: Caches only server boosters</li> <li><code>owner</code>: Caches only the owner of a server</li> <li><code>none</code>: Cache no members</li> </ul>"},{"location":"setup/#using-multiple-bots","title":"Using multiple bots","text":"<p>To have multiple bots running on your server, you can add more into the <code>\"bots\"</code> list in the config file like this:</p> discarpet.json<pre><code>{\n  \"bots\": [\n    {\n      \"bot_id\": \"mybot\",\n      \"bot_token\": \"token\",\n      \"intents\": [],\n      \"member_cache_policy\": \"all\"\n    },\n    {\n      \"bot_id\": \"mybot2\",\n      \"bot_token\": \"token 2\",\n      \"intents\": [\n        \"MESSAGE_CONTENT\"\n      ],\n      \"member_cache_policy\": \"all\"\n    },\n    {\n      \"bot_id\": \"mybot3\",\n      \"bot_token\": \"token 3\",\n      \"intents\": [\n        \"GUILD_MEMBERS\"\n      ],\n      \"member_cache_policy\": \"all\"\n    }\n  ]\n}\n</code></pre> <p>A script can only use one bot, and will only receive events from that bot.</p> <p>When getting Discord values like a channel or a message, they will have the context of the bot from that script.  (e.g. if you pass a message to another script and make it add a reaction, it will be added by the bot from the original script.)</p>"},{"location":"setup/#enabling-developer-mode","title":"Enabling developer mode","text":"<p>Most value functions require you to input an ID to get the respective value.</p> <p>To get IDs, you'll need to open your Discord settings and navigate to \"Advanced\". Then, enable \"Developer Mode\".</p> <p>Now, when you right click certain things (like users, channels, and messages), the context menu will have an option to copy the ID.</p>"},{"location":"events/discord-button/","title":"__on_discord_button","text":""},{"location":"events/discord-button/#__on_discord_buttoninteraction","title":"<code>__on_discord_button(interaction)</code>","text":"<p>Executes when a user presses a button component on a message.</p>"},{"location":"events/discord-button/#event-inputs","title":"Event inputs","text":"Value Type Description <code>interaction</code> Button interaction The interaction about the button that was pressed."},{"location":"events/discord-message-context-menu/","title":"__on_discord_message_context_menu","text":""},{"location":"events/discord-message-context-menu/#__on_discord_message_context_menuinteraction","title":"<code>__on_discord_message_context_menu(interaction)</code>","text":"<p>Executes when a user uses a message-context app.</p>"},{"location":"events/discord-message-context-menu/#event-inputs","title":"Event inputs","text":"Value Type Description <code>interaction</code> Message context menu interaction The interaction about the app that was used."},{"location":"events/discord-message-delete/","title":"__on_discord_message_delete","text":""},{"location":"events/discord-message-delete/#__on_discord_message_deletemessage_id-channel","title":"<code>__on_discord_message_delete(message_id, channel)</code>","text":"<p>Executes when a message is deleted in a channel the bot has access to.</p>"},{"location":"events/discord-message-delete/#event-inputs","title":"Event inputs","text":"Value Type Description <code>message_id</code> String The id of the message that was deleted. <code>channel</code> Channel The channel in which the message was deleted"},{"location":"events/discord-message-edit/","title":"__on_discord_message_edit","text":""},{"location":"events/discord-message-edit/#__on_discord_message_editmessage","title":"<code>__on_discord_message_edit(message)</code>","text":"<p>Executes when a message is edited in a channel the bot has access to.</p>"},{"location":"events/discord-message-edit/#event-inputs","title":"Event inputs","text":"Value Type Description <code>message</code> Message The message after editing."},{"location":"events/discord-message/","title":"__on_discord_message","text":""},{"location":"events/discord-message/#__on_discord_messagemessage","title":"<code>__on_discord_message(message)</code>","text":"<p>Executes when a message is sent in a channel the bot has access to.</p>"},{"location":"events/discord-message/#event-inputs","title":"Event inputs","text":"Value Type Description <code>message</code> Message The message that was sent."},{"location":"events/discord-modal/","title":"__on_discord_modal","text":""},{"location":"events/discord-modal/#__on_discord_modalinteraction","title":"<code>__on_discord_modal(interaction)</code>","text":"<p>Executes when a user submits a modal.</p>"},{"location":"events/discord-modal/#event-inputs","title":"Event inputs","text":"Value Type Description <code>interaction</code> Modal interaction The interaction about the submitted modal data."},{"location":"events/discord-reaction/","title":"__on_discord_reaction","text":""},{"location":"events/discord-reaction/#__on_discord_reactionreaction-member-added","title":"<code>__on_discord_reaction(reaction, member, added)</code>","text":"<p>Executes when a user reacts to a message with some emoji.</p>"},{"location":"events/discord-reaction/#event-inputs","title":"Event inputs","text":"Value Type Description <code>reaction</code> Reaction The reaction that was made containing the emoji. <code>member</code> Member The member who reacted. <code>added</code> Boolean Whether the reaction was added or removed."},{"location":"events/discord-select-menu/","title":"__on_discord_select_menu","text":""},{"location":"events/discord-select-menu/#__on_discord_select_menuinteraction","title":"<code>__on_discord_select_menu(interaction)</code>","text":"<p>Executes when a user uses a select menu component on a message.</p>"},{"location":"events/discord-select-menu/#event-inputs","title":"Event inputs","text":"Value Type Description <code>interaction</code> Select menu interaction The interaction about the select menu that was used."},{"location":"events/discord-server-member-join/","title":"__on_discord_server_member_join","text":""},{"location":"events/discord-server-member-join/#__on_discord_server_member_joinserver-member","title":"<code>__on_discord_server_member_join(server, member)</code>","text":"<p>Executes when a user joins a server the bot has access to.</p>"},{"location":"events/discord-server-member-join/#event-inputs","title":"Event inputs","text":"Value Type Description <code>server</code> Server The server the user joined. <code>member</code> Member The member that joined the server."},{"location":"events/discord-server-member-leave/","title":"__on_discord_server_member_leave","text":""},{"location":"events/discord-server-member-leave/#__on_discord_server_member_leaveserver-user","title":"<code>__on_discord_server_member_leave(server, user)</code>","text":"<p>Executes when a user leaves a server the bot has access to.</p>"},{"location":"events/discord-server-member-leave/#event-inputs","title":"Event inputs","text":"Value Type Description <code>server</code> Server The server the user left. <code>user</code> User The user that left the server."},{"location":"events/discord-slash-command/","title":"__on_discord_slash_command","text":""},{"location":"events/discord-slash-command/#__on_discord_slash_commandinteraction","title":"<code>__on_discord_slash_command(interaction)</code>","text":"<p>Executes when a user runs a slash command.</p>"},{"location":"events/discord-slash-command/#event-inputs","title":"Event inputs","text":"Value Type Description <code>interaction</code> Slash command interaction The interaction about the command that was executed."},{"location":"events/discord-user-context-menu/","title":"__on_discord_user_context_menu","text":""},{"location":"events/discord-user-context-menu/#__on_discord_user_context_menuinteraction","title":"<code>__on_discord_user_context_menu(interaction)</code>","text":"<p>Executes when a user uses a user-context app.</p>"},{"location":"events/discord-user-context-menu/#event-inputs","title":"Event inputs","text":"Value Type Description <code>interaction</code> User context menu interaction The interaction about the app that was used."},{"location":"events/system-message/","title":"__on_system_message","text":""},{"location":"events/system-message/#__on_system_messagetext-type","title":"<code>__on_system_message(text, type)</code>","text":"<p>Executes when a system message is sent, such as server chat and operator messages.</p>"},{"location":"events/system-message/#event-inputs","title":"Event inputs","text":"Value Type Description <code>text</code> Formatted text The text of the system message. <code>type</code> String, Null The type of the translation text key.Returns <code>null</code> if <code>text</code> is a literal text. <p>To extract components from <code>text</code> for further processing, you can get them by using <code>decode_json(encode_json(text))</code></p> <p>You can look up the types you can get from <code>type</code> with any lang file (e.g. <code>en_us.json</code>) from Minecraft's assets, or by just printing it out and testing various chat message types.</p> <p>Here are some example types:</p> Type Description <code>chat.type.text</code> Normal chat message <code>multiplayer.player.left</code> Player left the game <code>chat.type.admin</code> Admin command executed"},{"location":"examples/attachments/","title":"Attachments","text":"<p>Sends a message with multiple attachments:</p> <ul> <li>Image attachment from an external URL</li> <li>File attachment with specified <code>bytes</code></li> </ul> <p></p> attachments.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\nchannel = dc_channel_from_id('put channel id here!');\n\ndc_send_message(channel, {\n    'content' -&gt; '',\n    'attachments' -&gt; [\n        {\n            'file' -&gt; {\n                'url' -&gt; 'https://raw.githubusercontent.com/replaceitem/carpet-discarpet/master/src/main/resources/assets/discarpet/icon.png'\n            },\n        },\n        {\n            'file' -&gt; {\n                'string' -&gt; 'Hello world!',\n            },\n            'name' -&gt; 'Message.txt'\n        }\n    ]\n});\n</code></pre>"},{"location":"examples/chat/","title":"Chat","text":"<p>Bridges chat messages to Discord, and vice versa with the ability to ping users by their @name.</p> <p>Requires privileged intents</p> <p>This script requires the <code>MESSAGE_CONTENT</code> and <code>GUILD_MEMBERS</code> intent to be used.</p> <p></p> chat.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\nglobal_channel = dc_channel_from_id('put channel id here!');\n\n// bridge dc -&gt; mc\n__on_discord_message(message) -&gt; (\n    // make sure to only bridge messages from our channel\n    if (message~'channel'~'id' != global_channel~'id', return());\n\n    // get server member that sent the message\n    author = message~'member';\n\n    // ignore messages without a member (e.g. interactions)\n    if (author == null, return());\n\n    // ignore messages by the bot itself\n    if (author~'is_self', return()); \n\n    // get member details\n    name = author~'effective_name';\n    color = author~'color' || '#FFFFFF';\n\n    // format the message\n    mc_message = format(str('%s [%s]', color, name));\n    mc_message += format(str('w  %s', message~'readable_content'));\n\n    print(player('all'), mc_message);\n);\n\n// bridge mc -&gt; dc\n__on_system_message(text, type) -&gt; (\n    if (type != 'chat.type.admin',\n        message = parse_mentions(text, global_channel~'server');\n        task(_(outer(message)) -&gt; dc_send_message(global_channel, message)); \n    );\n);\n\n// parse pings from mc -&gt; dc\nparse_mentions(message, server) -&gt; (\n    for (server~'members',\n        message = replace(\n            message,\n            '@' + _~'effective_name',\n            _~'user'~'mention_tag'\n        );\n    );\n    return (message);\n);\n</code></pre>"},{"location":"examples/context-menus/","title":"Context menus","text":"<p>Adds multiple context menu commands:</p> <ul> <li>One message command, which waits 10 seconds and then deletes the message.</li> <li>Two user commands, one for adding a [prefix] to a user's nickname, and one for removing it.</li> </ul> <p>Notes</p> <ol> <li>Your bot will need \"Manage Messages\" and \"Manage Nicknames\" permissions.</li> <li>The bot cannot set the nickname of someone that is higher in role hierarchy than itself.</li> </ol> <p></p> context_menus.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\ninitialize_commands() -&gt; (\n    // remove all context menu interactions\n    for (dc_get_global_application_commands(),\n        command_value_type = type(_);\n        if (command_value_type ~ '_context_menu', dc_delete(_));\n    );\n\n    global_set_prefix_cmd = dc_create_application_command('user_context_menu', {\n        'name' -&gt; 'Set prefix'\n    });\n\n    global_reset_prefix_cmd = dc_create_application_command('user_context_menu', {\n        'name' -&gt; 'Reset prefix'\n    });\n\n    global_delete_cmd = dc_create_application_command('message_context_menu',{\n        'name' -&gt; 'Delete in 10 seconds'\n    });\n);\n\n// reload commands async, as that would otherwise freeze the game for multiple seconds\ntask('initialize_commands');\n\n// the targeted user for changing prefix, stored for retrieving after modal interaction\nglobal_targets = {};\n\n\n__on_discord_user_context_menu(interaction) -&gt; (\n    command_id = interaction~'command_id';\n\n    print(str(\n        '%s used %s on %s (%s)',\n        interaction~'user',\n        interaction~'command_name',\n        interaction~'target',\n        command_id\n    ));\n\n    if (command_id == global_set_prefix_cmd~'id',\n        task(_(outer(interaction)) -&gt; (\n            global_targets:(interaction~'user'~'id') = interaction~'target';\n            dc_respond_interaction(interaction,'respond_modal', {\n                'id' -&gt; 'set_prefix',\n                'title' -&gt; 'Custom prefix',\n                'components' -&gt; [\n                    [{\n                        'component' -&gt; 'text_input',\n                        'id' -&gt; 'prefix_input',\n                        'style' -&gt; 'short',\n                        'label' -&gt; 'Prefix',\n                        'required' -&gt; true,\n                        'placeholder' -&gt; 'Enter the prefix'\n                    }]\n                ]\n            });\n        ));\n    );\n\n    if (command_id == global_reset_prefix_cmd~'id',\n        task(_(outer(interaction)) -&gt; (\n            target = interaction~'target';\n            dc_set_nickname(target, interaction~'server', target~'name');\n            dc_respond_interaction(interaction, 'respond_immediately', {\n                'content' -&gt; str('Reset prefix of %s', target~'name'),\n                'ephemeral' -&gt; true\n            });\n        ));\n    );\n);\n\n\n__on_discord_message_context_menu(interaction) -&gt; (\n    print(str('%s used %s on %s', interaction~'user', interaction~'command_id', interaction~'target'));\n\n    if (interaction~'command_id' == global_delete_cmd~'id',\n        task(_(outer(interaction)) -&gt; (\n            dc_respond_interaction(interaction, 'respond_later');\n            sleep(10000);\n            dc_delete(interaction~'target');\n            dc_respond_interaction(interaction, 'respond_followup', {\n                'content' -&gt; 'Deleted message'\n            });\n        ));\n    );\n);\n\n\n__on_discord_modal(interaction) -&gt; (\n    task(_(outer(interaction)) -&gt; (\n        user = interaction~'user';\n        target = global_targets:(user~'id');\n\n        delete(global_targets, user);\n\n        prefix = interaction~'input_values_by_id':'prefix_input';\n        nickname = str('[%s] %s', prefix, target~'name');\n\n        dc_set_nickname(target, interaction~'server', nickname);\n        dc_respond_interaction(interaction, 'respond_immediately', {\n            'content' -&gt; str('Changed prefix of %s', target~'name', prefix),\n            'ephemeral' -&gt; true\n        });\n    ));\n);\n</code></pre>"},{"location":"examples/embed/","title":"Embed","text":"<p>Sends a message with an embed.</p> <p></p> embeds.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\nchannel = dc_channel_from_id('put channel id here!');\n\nembed = {\n    'title' -&gt; 'SuperCoolEmbed',\n    'url' -&gt; 'https://github.com/gnembon/fabric-carpet',\n    'description' -&gt; 'SuperCoolEmbed',\n    'author'-&gt; {\n        'name' -&gt; 'replaceitem',\n        'url' -&gt; 'https://github.com/replaceitem',\n        'icon' -&gt; 'https://github.com/replaceitem.png'\n    },\n    'fields' -&gt; [\n        {\n            'name' -&gt; 'Field 1',\n            'value' -&gt; 'This field is the first'\n        },\n        {\n            'name' -&gt; 'Field 2',\n            'value' -&gt; 'This field is the second'\n        },\n        {\n            'name' -&gt; 'Inline field 1',\n            'value' -&gt; 'This is an inline field',\n            'inline' -&gt; true\n        },\n        {\n            'name' -&gt; 'Inline field 2',\n            'value' -&gt; 'This is another inline field',\n            'inline' -&gt; true\n        }\n    ],\n    'color' -&gt; [255, 128, 0],\n    'footer' -&gt; {\n        'text' -&gt; 'gnembon',\n        'icon' -&gt; 'https://github.com/gnembon.png'\n    },\n    'image' -&gt; 'https://raw.githubusercontent.com/replaceitem/carpet-discarpet/master/src/main/resources/assets/discarpet/icon.png',\n    'thumbnail' -&gt; 'https://repository-images.githubusercontent.com/185908133/04119080-f738-11e9-9e23-03d4e371d438',\n    'timestamp' -&gt; 'now'\n};\n\ndc_send_message(channel, {\n    'content' -&gt; '',\n    'embeds' -&gt; [embed]\n});\n</code></pre>"},{"location":"examples/grief-log/","title":"Grief log","text":"<p>Sends a message to alert when a player is opening containers or placing TNT.</p> <p></p> grief_log.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\nglobal_log = dc_channel_from_id('put channel id here!');\n\n__on_player_right_clicks_block(player, item_tuple, hand, block, face, hitvec) -&gt; (\n    // warn when player opens chest/barrel/shulkerbox\n    if (['chest', 'barrel', 'shulker_box']~block != null,\n        dimension = current_dimension(); \n        task(_(outer(player), outer(block), outer(dimension)) -&gt; (\n            dc_send_message(global_log,\n                str(':warning: %s opened %s at %s in %s', player, block, pos(block), dimension));\n        ));\n    );\n);\n__on_player_places_block(player, item_tuple, hand, block) -&gt; (\n    // warn when player places tnt\n    if (block == 'tnt', \n        task(_(outer(player), outer(block)) -&gt; (\n            dc_send_message(global_log,\n                str(':warning: %s placed %s at %s in %s', player, block, pos(block), current_dimension() ));\n        ));\n    );\n);\n</code></pre>"},{"location":"examples/log/","title":"Log","text":"<p>Sends all system messages and triggered commands.</p> <p></p> log.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\nglobal_log = dc_channel_from_id('put channel id here!');\n\n// listens for system messages, and logs it\n__on_system_message(text, type) -&gt; (\n    task(_(outer(text)) -&gt; (\n        dc_send_message(global_log, text);\n    ));\n);\n\n// listens for triggered commands, and logs it\n__on_player_command(player, command) -&gt; (\n    task(_(outer(player), outer(command)) -&gt; (\n        dc_send_message(global_log, str('%s ran `%s`', player, command));\n    ));\n);\n</code></pre>"},{"location":"examples/message-components/","title":"Message components","text":"<p>Sends a message with various interactive components.</p> <p></p> message_components.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\nglobal_channel = dc_channel_from_id('put channel id here!');\n\ntask(_() -&gt; (\n    button_components = [\n        {\n            'component' -&gt; 'button',\n            'id' -&gt; 'red_button',\n            'style' -&gt; 'danger',\n            'label' -&gt; 'Red button',\n            'emoji' -&gt; '\u2716\ufe0f'\n        },\n        {\n            'component' -&gt; 'button',\n            'id' -&gt; 'blurple_button',\n            'style' -&gt; 'primary',\n            'label' -&gt; 'Blurple button',\n            'emoji' -&gt; '\ud83d\udeaa'\n        },\n        {\n            'component' -&gt; 'button',\n            'id' -&gt; 'green_button',\n            'style' -&gt; 'success',\n            'label' -&gt; 'Green button',\n            'emoji' -&gt; '\ud83d\udc51'\n        },\n        {\n            'component' -&gt; 'button',\n            'id' -&gt; 'grey_button',\n            'style' -&gt; 'secondary',\n            'label' -&gt; 'Grey button',\n            'emoji' -&gt; '\ud83d\udce7'\n        },\n        {\n            'component' -&gt; 'button',\n            // 'id' is not required\n            'style' -&gt; 'link',\n            'label' -&gt; 'Open replaceitem\\'s github',\n            'emoji' -&gt; '\ud83c\udf10',\n            'url' -&gt; 'https://github.com/replaceitem'\n        }\n    ];\n\n    select_string_component = [{\n        'component' -&gt; 'string_select',\n        'id' -&gt; 'select_string',\n        'placeholder' -&gt; 'Select at least 2 items here',\n        'min' -&gt; 2,\n        'max' -&gt; 3,\n        'options' -&gt; [\n            {\n                'value' -&gt; 'pizza',\n                'label' -&gt; 'Pizza',\n                'description' -&gt; 'I mean who doesn\\'t like pizza?',\n                'emoji' -&gt; '\ud83c\udf55'\n            },\n            {\n                'value' -&gt; 'cake',\n                'label' -&gt; 'Cake',\n                'description' -&gt; 'If you prefer sweet food',\n                'emoji' -&gt; '\ud83c\udf70'\n            },\n            {\n                'value' -&gt; 'popcorn',\n                'label' -&gt; 'Popcorn',\n                'description' -&gt; 'Just like in the cinema',\n                'emoji' -&gt; '\ud83c\udf7f'\n            },\n            {\n                'value' -&gt; 'bread',\n                'label' -&gt; 'Bread',\n                'description' -&gt; 'Something simple but delicious',\n                'emoji' -&gt; '\ud83c\udf5e'\n            },\n            {\n                'value' -&gt; 'carrot',\n                'label' -&gt; 'Carrot',\n                'description' -&gt; 'Something healthy',\n                'emoji' -&gt; '\ud83e\udd55'\n            }\n        ]\n    }];\n\n    select_user_component = [{\n        'component' -&gt; 'user_select',\n        'id' -&gt; 'select_user',\n        'placeholder' -&gt; 'Pick a user'\n    }];\n\n    select_role_component = [{\n        'component' -&gt; 'role_select',\n        'id' -&gt; 'select_role',\n        'placeholder' -&gt; 'Pick a role'\n    }];\n\n    select_mentionable_component = [{\n        'component' -&gt; 'mentionable_select',\n        'id' -&gt; 'select_mentionable',\n        'placeholder' -&gt; 'Pick a mentionable'\n    }];\n\n    select_channel_component = [{\n        'component' -&gt; 'channel_select',\n        'id' -&gt; 'select_channel',\n        'placeholder' -&gt; 'Pick a channel'\n    }];\n\n    button_url_component = [{\n        // leaving 'id' out since its a url button\n        'component' -&gt; 'button',\n        'style' -&gt; 'url',\n        'label' -&gt; 'Open replaceitem\\'s github',\n        'emoji' -&gt; '\ud83c\udf10',\n        'url' -&gt; 'https://github.com/replaceitem'\n    }];\n\n    // note: 'components' cannot have more than 5 rows\n    dc_send_message(global_channel, {\n        'content' -&gt; 'Example interactions',\n        'components' -&gt; [\n            button_components,\n            select_string_component,\n            select_user_component,\n            select_role_component,\n            //select_mentionable_component,\n            select_channel_component\n        ]\n    });\n));\n\n__on_discord_button(interaction) -&gt; (\n    task(_(outer(interaction)) -&gt; (\n        dc_respond_interaction(interaction, 'RESPOND_IMMEDIATELY', str(\n            'Pressed button **%s**', interaction~'custom_id'\n        ));\n    ));\n);\n\n__on_discord_select_menu(interaction) -&gt; (\n    task(_(outer(interaction)) -&gt; (\n        dc_respond_interaction(interaction, 'RESPOND_IMMEDIATELY', str(\n            'Selected **%s**', str(interaction~'chosen')\n        ));\n    ));\n);\n</code></pre>"},{"location":"examples/modal/","title":"Modal","text":"<p>Sends a message with a button that opens up a modal.</p> <p></p> modal.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\nglobal_channel = dc_channel_from_id('put channel id here!');\n\nsend_modal(int) -&gt; (\n    dc_respond_interaction(int, 'respond_modal', {\n        'id' -&gt; 'my_modal',\n        'title' -&gt; 'A Custom Modal',\n        'components' -&gt; [\n            [{\n                'component' -&gt; 'text_input',\n                'id' -&gt; 'name_input',\n                'style' -&gt; 'short',\n                'label' -&gt; 'What\\'s your name?',\n                'min_length' -&gt; 3,\n                'max_length' -&gt; 32,\n                'required' -&gt; true,\n                'placeholder' -&gt; 'Put your name here'\n            }],\n            [{\n                'component' -&gt; 'text_input',\n                'id' -&gt; 'age_input',\n                'style' -&gt; 'short',\n                'label' -&gt; 'How old are you?',\n                'min_length' -&gt; 1,\n                'max_length' -&gt; 3,\n                'required' -&gt; true,\n                'placeholder' -&gt; 'Enter a number'\n            }],\n            [{\n                'component' -&gt; 'text_input',\n                'id' -&gt; 'introduction_input',\n                'style' -&gt; 'paragraph',\n                'label' -&gt; 'Introduce yourself',\n                'required' -&gt; false,\n                'value' -&gt; 'Hello, I am'\n            }]\n        ]\n    });\n);\n\ntask(_() -&gt; (\n    dc_send_message(global_channel, {\n        'content' -&gt; 'Click below to open modal',\n        'components' -&gt; [\n            [{\n                'id' -&gt; 'modal_btn',\n                'component' -&gt; 'button',\n                'label' -&gt; 'Open modal'\n            }]\n        ]\n    });\n));\n\n__on_discord_button(int) -&gt; (\n    if (int~'custom_id' == 'modal_btn',\n        task(_(outer(int)) -&gt; (\n            send_modal(int);\n        ));\n    );\n);\n\n__on_discord_modal(interaction) -&gt; (\n    input = interaction~'input_values_by_id';\n\n    dc_respond_interaction(interaction, 'respond_immediately', {\n        'content' -&gt; {\n            'name' -&gt; input:'name_input',\n            'age' -&gt; input:'age_input',\n            'introduction' -&gt; input:'introduction_input'\n        }\n    });\n);\n</code></pre>"},{"location":"examples/presence/","title":"Presence","text":"<p>Changes the bot's activity and status to show how many players are online.</p> <p></p> presence.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\nupdate_activity() -&gt; (\n    players = length(player('all'));\n\n    // use \"player\" if only 1 is online, else use plural \"players\"\n    players_suffix = if (players == 1, 'player', 'players');\n\n    presence = {\n        'status' -&gt; if(players == 0, 'idle', 'online'),\n        'activity_type' -&gt; 'playing',\n        'activity_name' -&gt; if(players == 0, 'with nobody', str('with %s %s', players, players_suffix)),\n    };\n\n    dc_update_presence(presence);\n);\n\ntask(_() -&gt; (\n    // check whether player count changed every 10 seconds\n    previous_count = null;\n    while (true, (\n        player_count = length(player('all'));\n        if (previous_count != player_count,\n            previous_count = player_count;\n            update_activity();\n        );\n        sleep(10000);\n    ));\n));\n</code></pre>"},{"location":"examples/reactions/","title":"Reactions","text":"<p>A poll message that listens to added and removed reactions.</p> <p></p> reactions.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\nglobal_channel = dc_channel_from_id('put channel id here!');\n\ntask(_() -&gt; (\n    // create a message, then add reactions to that message\n    message = dc_send_message(global_channel, 'React with \ud83d\udfe9 to accept or \ud83d\udfe5 to deny');\n    global_msg_id = message~'id';\n\n    dc_add_reaction(message, '\ud83d\udfe9');\n    dc_add_reaction(message, '\ud83d\udfe5');\n));\n\n__on_discord_reaction(reaction, member, added) -&gt; (\n    // ignore reactions from itself\n    if (member~'is_self', return());\n\n    // if from the same message, send the action\n    if (reaction~'message_id' == global_msg_id,\n        action = if (added, 'voted with', 'removed their vote for');\n        task(_(outer(reaction), outer(member), outer(action)) -&gt; (\n            dc_send_message(reaction~'channel',\n                str('%s %s %s', member~'effective_name', action, reaction~'emoji'~'unicode'));\n        ));\n    );\n);\n</code></pre>"},{"location":"examples/reply/","title":"Reply","text":"<p>Replies to any message that only contains \"Ping\".</p> <p>Requires privileged intents</p> <p>This script requires the <code>MESSAGE_CONTENT</code> intent to be used.</p> <p></p> reply.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\n__on_discord_message(message) -&gt; (\n    // ignore messages from itself\n    if (message~'user'~'is_self', return());\n\n    // if content is Ping, proceed to Pong!\n    if (message~'content' == 'Ping',\n        task(_(outer(message)) -&gt; (\n            dc_send_message(message~'channel', {\n                'content' -&gt; str('Pong! %s', message~'user'~'mention_tag'),\n                'reply_to' -&gt; message\n            });\n        ));\n    );\n);\n</code></pre>"},{"location":"examples/slash-commands/","title":"Slash commands","text":"<p>Adds multiple slash commands:</p> <ul> <li><code>/ping</code> with fake latency</li> <li><code>/upload</code> image</li> <li><code>/complex [create|delete] channel</code> with various options</li> </ul> <p></p> slash_commands.sc<pre><code>__config() -&gt; {\n    'scope' -&gt; 'global',\n    'bot' -&gt; 'mybot'\n};\n\nglobal_server = dc_server_from_id('put server id here!');\n\ninitialize_commands() -&gt; (\n    // remove all commands first\n    for (global_server~'slash_commands', dc_delete(_));\n\n    // simple ping command\n    dc_create_application_command('slash_command', {\n        'name' -&gt; 'ping',\n        'description' -&gt; 'Ping -&gt; Pong!'\n    }, global_server);\n\n    // slighly more complex command\n    // shows the file you uploaded\n    dc_create_application_command('slash_command', {\n        'name' -&gt; 'upload',\n        'description' -&gt; 'Upload and display file',\n        'options' -&gt; [{\n            'type' -&gt; 'attachment',\n            'name' -&gt; 'attachment',\n            'description' -&gt; 'Upload a file',\n            'required' -&gt; true\n        }]\n    });\n\n    // more complex command\n    // takes in various options and spits them back out\n    dc_create_application_command('slash_command', {\n        'name' -&gt; 'complex',\n        'description' -&gt; 'Test command',\n        'options' -&gt; [\n            {\n                'type' -&gt; 'sub_command_group',\n                'name' -&gt; 'create',\n                'description' -&gt; 'Create something',\n                'options' -&gt; [\n                    {\n                        'type' -&gt; 'sub_command',\n                        'name' -&gt; 'channel',\n                        'description' -&gt; 'Create a channel',\n                        'options' -&gt; [\n                            {\n                                'type' -&gt; 'string',\n                                'name' -&gt; 'name',\n                                'description' -&gt; 'Name of the channel',\n                                'required' -&gt; true\n                            },\n                            {\n                                'type' -&gt; 'string',\n                                'name' -&gt; 'type',\n                                'description' -&gt; 'Channel type',\n                                'required' -&gt; true,\n                                'choices' -&gt; [\n                                    {\n                                        'name' -&gt; 'Text',\n                                        'value' -&gt; 'text'\n                                    },\n                                    {\n                                        'name' -&gt; 'Voice',\n                                        'value' -&gt; 'voice'\n                                    },\n                                    {\n                                        'name' -&gt; 'Announcement',\n                                        'value' -&gt; 'announcement'\n                                    }\n                                ]\n                            },\n                            {\n                                'type' -&gt; 'boolean',\n                                'name' -&gt; 'private',\n                                'description' -&gt; 'Is this channel private?',\n                                'required' -&gt; true\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                'type' -&gt; 'sub_command_group',\n                'name' -&gt; 'delete',\n                'description' -&gt; 'Delete something',\n                'options' -&gt; [\n                    {\n                        'type' -&gt; 'sub_command',\n                        'name' -&gt; 'channel',\n                        'description' -&gt; 'Delete a channel',\n                        'options' -&gt; [\n                            {\n                                'type' -&gt; 'channel',\n                                'name' -&gt; 'channel',\n                                'description' -&gt; 'What channel to delete',\n                                'required' -&gt; true\n                            },\n                            {\n                                'type' -&gt; 'boolean',\n                                'name' -&gt; 'force',\n                                'description' -&gt; 'Force delete channel?',\n                                'required' -&gt; false\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    });\n);\n\n// reload commands async, so the game doesnt freeze\ntask('initialize_commands');\n\n__on_discord_slash_command(cmd) -&gt; (\n    cmd_name = cmd~'command_name';\n    group_name = cmd~'sub_command_group';\n    subcommand_name = cmd~'sub_command';\n    args = cmd~'arguments_by_name';\n    logger(cmd_name);\n    logger(group_name);\n    logger(subcommand_name);\n\n    if (cmd_name == 'ping',\n        task(_(outer(cmd)) -&gt; (\n            dc_respond_interaction(cmd, 'respond_later');\n            sleep(5000);\n            dc_respond_interaction(cmd, 'respond_followup', 'Pong! 5 seconds delay (catastrophic!)')\n        ));\n    );\n\n    if (cmd_name == 'upload',\n        task(_(outer(cmd), outer(args)) -&gt; (\n            dc_respond_interaction(cmd, 'respond_immediately', {\n                'content' -&gt; str('Thank you for %s', args:'attachment'~'value'~'url'),\n                'ephemeral' -&gt; true\n            });\n        ));\n    );\n\n    if (cmd_name == 'complex',\n        if (group_name == 'create' &amp;&amp; subcommand_name == 'channel', (\n            task(_(outer(cmd), outer(args)) -&gt; (\n                dc_respond_interaction(cmd, 'respond_immediately', {\n                    'content' -&gt; {\n                        'name' -&gt; args:'name'~'value',\n                        'type' -&gt; args:'type'~'value',\n                        'private' -&gt; args:'private'~'value'\n                    }\n                });\n            ));\n        ));\n\n        if (group_name == 'delete' &amp;&amp; subcommand_name == 'channel', (\n            task(_(outer(cmd), outer(args)) -&gt; (\n                dc_respond_interaction(cmd, 'respond_immediately', {\n                    'content' -&gt; {\n                        'channel' -&gt; args:'channel'~'value',\n                        'force' -&gt; args:'force'~'value'\n                    }\n                });\n            ));\n        ));\n    );\n);\n</code></pre>"},{"location":"functions/add-reaction/","title":"dc_add_reaction","text":""},{"location":"functions/add-reaction/#dc_add_reactionmessage-emoji","title":"<code>dc_add_reaction(message, emoji)</code>","text":"<p>Reacts to a message with an emoji.</p>"},{"location":"functions/add-reaction/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>message</code> Message The message to react to. <code>emoji</code> Emoji object The emoji to use for the reaction."},{"location":"functions/add-reaction/#output-values","title":"Output values","text":""},{"location":"functions/add-reaction/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/create-thread/","title":"dc_create_thread","text":""},{"location":"functions/create-thread/#dc_create_threadtargetthread","title":"<code>dc_create_thread(target,thread)</code>","text":"<p>Creates a thread channel.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/create-thread/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>target</code> Channel or Message The channel where this thread should be created, or message with which the thread should start <code>thread</code> Thread object The details to use to create the thread."},{"location":"functions/create-thread/#output-values","title":"Output values","text":""},{"location":"functions/create-thread/#return-values","title":"Return values","text":"<ul> <li>The created thread channel.</li> </ul>"},{"location":"functions/create-thread/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/delete/","title":"dc_delete","text":""},{"location":"functions/delete/#dc_deletevalue","title":"<code>dc_delete(value)</code>","text":"<p>Deletes whatever value provided.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/delete/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>value</code> Message, Role, Emoji, Sticker, Webhook, Slash command The value to delete."},{"location":"functions/delete/#output-values","title":"Output values","text":""},{"location":"functions/delete/#return-values","title":"Return values","text":"<ul> <li>Null, if successful.</li> </ul>"},{"location":"functions/delete/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code>     * Message - You do not have \"Manage Messages\" permission.     * Role - You do not have \"Manage Roles\" permission, or the role is of higher hierarchy.     * Emoji, Sticker - You do not have \"Manage Expressions\" permission.     * Webhook - You do not have \"Manage Webhooks\" permission.</p>"},{"location":"functions/remove-reaction/","title":"dc_remove_reaction","text":""},{"location":"functions/remove-reaction/#dc_remove_reactionmessage-emoji-user","title":"<code>dc_remove_reaction(message, emoji?, user?)</code>","text":"<p>Removes reactions from a message. If only a message is provided, all reactions are cleared. If an emoji is specified, only reactions with that emoji are cleared. Specifying a user only removes the reaction from that user with that emoji.</p>"},{"location":"functions/remove-reaction/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>message</code> Message The message on which to remove reactions. <code>emoji</code> Emoji object The emoji to remove reactions for. <code>user</code> User The user to remove reactions for."},{"location":"functions/remove-reaction/#output-values","title":"Output values","text":""},{"location":"functions/remove-reaction/#uncaught-exceptions","title":"Uncaught exceptions","text":"<ul> <li>Throws an exception on failure.</li> <li><code>api_exception</code> or <code>missing_permission</code></li> </ul>"},{"location":"functions/send-message/","title":"dc_send_message","text":""},{"location":"functions/send-message/#dc_send_messagetarget-content","title":"<code>dc_send_message(target, content)</code>","text":"<p>Sends a message to a target.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/send-message/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>target</code> Channel, User, Webhook The target to use to send the message. <code>content</code> Message content object The content of the message."},{"location":"functions/send-message/#output-values","title":"Output values","text":""},{"location":"functions/send-message/#return-values","title":"Return values","text":"<ul> <li>The sent message.</li> </ul>"},{"location":"functions/send-message/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/set-name/","title":"dc_set_name","text":""},{"location":"functions/set-name/#dc_set_namevalue-name","title":"<code>dc_set_name(value, name)</code>","text":"<p>Renames the value provided.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/set-name/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>value</code> Channel, Role, Emoji, Sticker, Webhook, Server The value to rename. <code>name</code> String The name to use for the value."},{"location":"functions/set-name/#output-values","title":"Output values","text":""},{"location":"functions/set-name/#return-values","title":"Return values","text":"<ul> <li>Null, if successful.</li> </ul>"},{"location":"functions/set-name/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code>     * Message - You do not have \"Manage Messages\" permission.     * Role - You do not have \"Manage Roles\" permission, or the role is of higher hierarchy.     * Emoji, Sticker - You do not have \"Manage Expressions\" permission.     * Webhook - You do not have \"Manage Webhooks\" permission.     * Server - You do not have \"Manage Server\" permission.</p>"},{"location":"functions/update-channel/","title":"dc_update_channel","text":""},{"location":"functions/update-channel/#dc_update_channelchannel-channel_updater","title":"<code>dc_update_channel(channel, channel_updater)</code>","text":"<p>Updates a channel. Only works for server channels.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/update-channel/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>channel</code> Channel The channel to update. <code>channel_updater</code> Channel updater object The data to update."},{"location":"functions/update-channel/#output-values","title":"Output values","text":""},{"location":"functions/update-channel/#return-values","title":"Return values","text":"<ul> <li>Returns <code>null</code>.</li> </ul>"},{"location":"functions/update-channel/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/bot/get-bot-user/","title":"dc_get_bot_user","text":""},{"location":"functions/bot/get-bot-user/#dc_get_bot_user","title":"<code>dc_get_bot_user()</code>","text":"<p>Gets the user value of the bot itself.</p>"},{"location":"functions/bot/get-bot-user/#output-values","title":"Output values","text":""},{"location":"functions/bot/get-bot-user/#return-values","title":"Return values","text":"<ul> <li>User value of the bot.</li> </ul>"},{"location":"functions/bot/update-presence/","title":"dc_update_presence","text":""},{"location":"functions/bot/update-presence/#dc_update_presencepresence_updater","title":"<code>dc_update_presence(presence_updater)</code>","text":"<p>Updates the activity and status of the bot.</p>"},{"location":"functions/bot/update-presence/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>presence_updater</code> Presence updater object The presence data to update."},{"location":"functions/bot/update-presence/#output-values","title":"Output values","text":""},{"location":"functions/bot/update-presence/#return-values","title":"Return values","text":"<ul> <li>Null, if successful.</li> </ul>"},{"location":"functions/interactions/create-application-command/","title":"dc_create_application_command","text":""},{"location":"functions/interactions/create-application-command/#dc_create_application_commandtype-data-server","title":"<code>dc_create_application_command(type, data, server?)</code>","text":"<p>Creates a slash command or a context menu command for the bot.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/interactions/create-application-command/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>type</code> String The type of command to create. <code>data</code> (See command types) The schema to be used depends on the <code>type</code>. <code>server</code> Server The server to create the command in.If left empty, the command will be available in all servers the bot is in."},{"location":"functions/interactions/create-application-command/#command-types","title":"Command types","text":"<p>Depending on the <code>type</code>, this function expects different schemas for <code>data</code>:</p> String Schema <code>slash_command</code> Slash command builder object <code>user_context_menu</code> User context menu builder object <code>message_context_menu</code> Message context menu builder object"},{"location":"functions/interactions/create-application-command/#output-values","title":"Output values","text":""},{"location":"functions/interactions/create-application-command/#return-values","title":"Return values","text":"<ul> <li>The created application command value.</li> </ul>"},{"location":"functions/interactions/create-application-command/#uncaught-exceptions","title":"Uncaught exceptions","text":"<ul> <li>Throws an exception on failure.</li> </ul>"},{"location":"functions/interactions/get-global-application-commands/","title":"dc_get_global_application_commands","text":""},{"location":"functions/interactions/get-global-application-commands/#dc_get_global_application_commands","title":"<code>dc_get_global_application_commands()</code>","text":"<p>Gets all global application commands of the bot.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/interactions/get-global-application-commands/#output-values","title":"Output values","text":""},{"location":"functions/interactions/get-global-application-commands/#return-values","title":"Return values","text":"<ul> <li>List of all global application commands.</li> </ul>"},{"location":"functions/interactions/get-global-application-commands/#uncaught-exceptions","title":"Uncaught exceptions","text":"<ul> <li>Throws an exception on failure.</li> </ul>"},{"location":"functions/interactions/respond-interaction/","title":"dc_respond_interaction","text":""},{"location":"functions/interactions/respond-interaction/#dc_respond_interactioninteraction-type-content","title":"<code>dc_respond_interaction(interaction, type, content?)</code>","text":"<p>Sends a response to an interaction.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/interactions/respond-interaction/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>interaction</code> Any interaction The interaction to respond to. <code>type</code> String The type of response to use. <code>content</code> (See response types) The data of the response, depending on the <code>type</code>."},{"location":"functions/interactions/respond-interaction/#response-types","title":"Response types","text":"String Description <code>respond_later</code> Tells that the interaction was received, and a response will come later.You will then need to send a <code>RESPOND_FOLLOWUP</code> response within 15 minutes.The <code>content</code> parameter optionally accepts Respond Later Data object. <code>respond_immediately</code> Sends an immediate response which has to come within 3 seconds.The <code>content</code> parameter requires a Message content object for this. <code>respond_followup</code> Sends a followup response for <code>RESPOND_LATER</code>.The <code>content</code> parameter requires a Message content object for this. <code>respond_modal</code> Opens a modal for the user.The <code>content</code> parameter requires a Modal object for this."},{"location":"functions/interactions/respond-interaction/#output-values","title":"Output values","text":""},{"location":"functions/interactions/respond-interaction/#return-values","title":"Return values","text":"<ul> <li>Null, if successful.</li> <li>The message that was sent, if using the <code>respond_followup</code> or <code>respond_immediately</code> type.</li> </ul>"},{"location":"functions/interactions/respond-interaction/#uncaught-exceptions","title":"Uncaught exceptions","text":"<ul> <li>Throws an exception on failure.</li> </ul>"},{"location":"functions/roles/add-role/","title":"dc_add_role","text":""},{"location":"functions/roles/add-role/#dc_add_roleuser-role-reason","title":"<code>dc_add_role(user, role, reason?)</code>","text":"<p>Adds a role to a user.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/roles/add-role/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>user</code> User The user to add the role to. <code>role</code> Role The role to add. <code>reason</code> String The audit log reason."},{"location":"functions/roles/add-role/#output-values","title":"Output values","text":""},{"location":"functions/roles/add-role/#return-values","title":"Return values","text":"<ul> <li>Null, if successful.</li> </ul>"},{"location":"functions/roles/add-role/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/roles/remove-role/","title":"dc_remove_role","text":""},{"location":"functions/roles/remove-role/#dc_remove_roleuser-role-reason","title":"<code>dc_remove_role(user, role, reason?)</code>","text":"<p>Removes a role from a user.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/roles/remove-role/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>user</code> User The user to remove the role from. <code>role</code> Role The role to remove. <code>reason</code> String The audit log reason."},{"location":"functions/roles/remove-role/#output-values","title":"Output values","text":""},{"location":"functions/roles/remove-role/#return-values","title":"Return values","text":"<ul> <li>Null, if successful.</li> </ul>"},{"location":"functions/roles/remove-role/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/users/set-nickname/","title":"dc_set_nickname","text":""},{"location":"functions/users/set-nickname/#dc_set_nicknameuser-server-name-reason","title":"<code>dc_set_nickname(user, server, name, reason?)</code>","text":"<p>Sets the nickname of a user in a server.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/users/set-nickname/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>user</code> User The user to set the nickname. <code>server</code> Server The server to set the user's nickname. <code>name</code> String The name to set the user to. <code>reason</code> String The audit log reason."},{"location":"functions/users/set-nickname/#output-values","title":"Output values","text":""},{"location":"functions/users/set-nickname/#return-values","title":"Return values","text":"<ul> <li>Null, if successful.</li> </ul>"},{"location":"functions/users/set-nickname/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/users/set-timeout/","title":"dc_set_timeout","text":""},{"location":"functions/users/set-timeout/#dc_set_timeoutuser-server-timestamp-reason","title":"<code>dc_set_timeout(user, server, timestamp, reason?)</code>","text":"<p>Timeouts the user in a server until the given timestamp.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/users/set-timeout/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>user</code> User The user to set the timeout to. <code>server</code> Server The server to set the user's timeout to. <code>timestamp</code> Number The timestamp in unix time milliseconds. <code>reason</code> String The audit log reason."},{"location":"functions/users/set-timeout/#output-values","title":"Output values","text":""},{"location":"functions/users/set-timeout/#return-values","title":"Return values","text":"<ul> <li>Null, if successful.</li> </ul>"},{"location":"functions/users/set-timeout/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/values/channel-from-id/","title":"dc_channel_from_id","text":""},{"location":"functions/values/channel-from-id/#dc_channel_from_idid","title":"<code>dc_channel_from_id(id)</code>","text":"<p>Gets the channel from the specified channel ID.</p>"},{"location":"functions/values/channel-from-id/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>id</code> String, Number The ID of the channel."},{"location":"functions/values/channel-from-id/#output-values","title":"Output values","text":""},{"location":"functions/values/channel-from-id/#return-values","title":"Return values","text":"<ul> <li>Channel</li> </ul>"},{"location":"functions/values/emoji-from-id/","title":"dc_emoji_from_id","text":""},{"location":"functions/values/emoji-from-id/#dc_emoji_from_idid","title":"<code>dc_emoji_from_id(id)</code>","text":"<p>Gets the emoji from the specified ID.</p> <p>This is only for custom emojis, since standard emojis are specified from the unicode emoji.</p>"},{"location":"functions/values/emoji-from-id/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>id</code> String, Number The ID of the emoji."},{"location":"functions/values/emoji-from-id/#output-values","title":"Output values","text":""},{"location":"functions/values/emoji-from-id/#return-values","title":"Return values","text":"<ul> <li>Emoji</li> </ul>"},{"location":"functions/values/member-from-user/","title":"dc_member_from_user","text":""},{"location":"functions/values/member-from-user/#dc_member_from_useruser-server","title":"<code>dc_member_from_user(user, server)</code>","text":"<p>Gets the member value from a user and server. If the member is cached, it is returned immediately. Otherwise, it will be requested and this call will block. </p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/values/member-from-user/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>user</code> User The user. <code>server</code> Server The server in which the user is."},{"location":"functions/values/member-from-user/#output-values","title":"Output values","text":""},{"location":"functions/values/member-from-user/#return-values","title":"Return values","text":"<ul> <li>Member</li> </ul>"},{"location":"functions/values/member-from-user/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/values/message-from-id/","title":"dc_message_from_id","text":""},{"location":"functions/values/message-from-id/#dc_message_from_idid-channel","title":"<code>dc_message_from_id(id, channel)</code>","text":"<p>Gets the message from the specified ID and channel.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/values/message-from-id/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>id</code> String, Number The ID of the message. <code>channel</code> Channel The channel to get the message from."},{"location":"functions/values/message-from-id/#output-values","title":"Output values","text":""},{"location":"functions/values/message-from-id/#return-values","title":"Return values","text":"<ul> <li>Message</li> </ul>"},{"location":"functions/values/message-from-id/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/values/role-from-id/","title":"dc_role_from_id","text":""},{"location":"functions/values/role-from-id/#dc_role_from_idid","title":"<code>dc_role_from_id(id)</code>","text":"<p>Gets the role from the specified ID.</p>"},{"location":"functions/values/role-from-id/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>id</code> String, Number The ID of the role."},{"location":"functions/values/role-from-id/#output-values","title":"Output values","text":""},{"location":"functions/values/role-from-id/#return-values","title":"Return values","text":"<ul> <li>Role</li> </ul>"},{"location":"functions/values/server-from-id/","title":"dc_server_from_id","text":""},{"location":"functions/values/server-from-id/#dc_server_from_idid","title":"<code>dc_server_from_id(id)</code>","text":"<p>Gets the server from the specified ID.</p>"},{"location":"functions/values/server-from-id/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>id</code> String, Number The ID of the server."},{"location":"functions/values/server-from-id/#output-values","title":"Output values","text":""},{"location":"functions/values/server-from-id/#return-values","title":"Return values","text":"<ul> <li>Server</li> </ul>"},{"location":"functions/values/sticker-from-id/","title":"dc_sticker_from_id","text":""},{"location":"functions/values/sticker-from-id/#dc_sticker_from_idid","title":"<code>dc_sticker_from_id(id)</code>","text":"<p>Gets the sticker from the specified ID.</p>"},{"location":"functions/values/sticker-from-id/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>id</code> String, Number The ID of the sticker."},{"location":"functions/values/sticker-from-id/#output-values","title":"Output values","text":""},{"location":"functions/values/sticker-from-id/#return-values","title":"Return values","text":"<ul> <li>Sticker</li> </ul>"},{"location":"functions/values/user-from-id/","title":"dc_user_from_id","text":""},{"location":"functions/values/user-from-id/#dc_user_from_idid","title":"<code>dc_user_from_id(id)</code>","text":"<p>Gets the user from the specified ID.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/values/user-from-id/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>id</code> String, Number The ID of the user."},{"location":"functions/values/user-from-id/#output-values","title":"Output values","text":""},{"location":"functions/values/user-from-id/#return-values","title":"Return values","text":"<ul> <li>User</li> </ul>"},{"location":"functions/values/user-from-id/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/values/webhook-from-id/","title":"dc_webhook_from_id","text":""},{"location":"functions/values/webhook-from-id/#dc_webhook_from_idid-token","title":"<code>dc_webhook_from_id(id, token)</code>","text":"<p>Gets the webhook from the specified ID and token.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/values/webhook-from-id/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>id</code> String, Number The ID of the webhook. <code>token</code> String The token of the webhook."},{"location":"functions/values/webhook-from-id/#output-values","title":"Output values","text":""},{"location":"functions/values/webhook-from-id/#return-values","title":"Return values","text":"<ul> <li>Webhook</li> </ul>"},{"location":"functions/values/webhook-from-id/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/values/webhook-from-url/","title":"dc_webhook_from_url","text":""},{"location":"functions/values/webhook-from-url/#dc_webhook_from_urlurl","title":"<code>dc_webhook_from_url(url)</code>","text":"<p>Gets the webhook from the specified URL.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/values/webhook-from-url/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>url</code> String The URL of the webhook."},{"location":"functions/values/webhook-from-url/#output-values","title":"Output values","text":""},{"location":"functions/values/webhook-from-url/#return-values","title":"Return values","text":"<ul> <li>Webhook</li> </ul>"},{"location":"functions/values/webhook-from-url/#uncaught-exceptions","title":"Uncaught exceptions","text":"<p>Throws an exception on failure. * <code>api_exception</code> * <code>missing_permission</code></p>"},{"location":"functions/webhooks/create-webhook/","title":"dc_create_webhook","text":""},{"location":"functions/webhooks/create-webhook/#dc_create_webhookchannel-profile","title":"<code>dc_create_webhook(channel, profile)</code>","text":"<p>Creates a new webhook in a channel.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/webhooks/create-webhook/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>channel</code> Channel The channel to create the webhook in. <code>profile</code> Webhook profile object The webhook's profile."},{"location":"functions/webhooks/create-webhook/#output-values","title":"Output values","text":""},{"location":"functions/webhooks/create-webhook/#return-values","title":"Return values","text":"<ul> <li>The created webhook.</li> </ul>"},{"location":"functions/webhooks/create-webhook/#uncaught-exceptions","title":"Uncaught exceptions","text":"<ul> <li>Throws an exception on failure.</li> </ul>"},{"location":"functions/webhooks/send-webhook/","title":"dc_send_webhook","text":""},{"location":"functions/webhooks/send-webhook/#dc_send_webhookwebhook-content-profile","title":"<code>dc_send_webhook(webhook, content, profile)</code>","text":"<p>Sends a message to the webhook. In contrast to <code>dc_send_message(webhook, content)</code>, it lets you change the webhook's profile at the same time.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/webhooks/send-webhook/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>webhook</code> Webhook The webhook to send the message to. <code>content</code> Message content object, String The content of the message. <code>profile</code> Webhook message profile object The profile to use."},{"location":"functions/webhooks/send-webhook/#output-values","title":"Output values","text":""},{"location":"functions/webhooks/send-webhook/#return-values","title":"Return values","text":"<ul> <li>The sent message.</li> </ul>"},{"location":"functions/webhooks/send-webhook/#uncaught-exceptions","title":"Uncaught exceptions","text":"<ul> <li>Throws an exception on failure.</li> </ul>"},{"location":"functions/webhooks/update-webhook/","title":"dc_update_webhook","text":""},{"location":"functions/webhooks/update-webhook/#dc_update_webhookwebhook-profile","title":"<code>dc_update_webhook(webhook, profile)</code>","text":"<p>Updates a webhook's profile.</p> Blocking function <p>Invoking this function can freeze the game. Use it in a <code>task</code> to avoid freezing your game.</p>"},{"location":"functions/webhooks/update-webhook/#input-parameters","title":"Input parameters","text":"Parameter Type Description <code>webhook</code> Webhook The webhook to update. <code>profile</code> Webhook profile updater object The profile to use."},{"location":"functions/webhooks/update-webhook/#output-values","title":"Output values","text":""},{"location":"functions/webhooks/update-webhook/#return-values","title":"Return values","text":"<ul> <li>The updated webhook.</li> </ul>"},{"location":"functions/webhooks/update-webhook/#uncaught-exceptions","title":"Uncaught exceptions","text":"<ul> <li>Throws an exception on failure.</li> </ul>"},{"location":"schemas/attachment/","title":"Attachment","text":"<p><code>attachment</code></p> <p>Used to create an attachment.</p> <p>An attachment can be created in different ways, either by using a file, URL, or from a string that will be the raw data of the file.</p>"},{"location":"schemas/attachment/#schema-fields","title":"Schema fields","text":"Key Type Description <code>file</code> File object The file to use for the attachment. <code>name</code> String The name of the attachment. <code>description</code> String The description of the attachment. This is the alt-text for images. <code>spoiler</code> Boolean Whether this attachment is marked as a spoiler."},{"location":"schemas/channel-updater/","title":"Channel updater","text":"<p><code>channel_updater</code></p> <p>Used to update a server channel with <code>dc_update_channel</code>.</p>"},{"location":"schemas/channel-updater/#schema-fields","title":"Schema fields","text":"Key Type Description <code>name</code> String The name of the channel. <code>topic</code> String The channel description. Only works for text or forum channels. <code>nsfw</code> Boolean Whether the channel is marked as NSFW. <code>position</code> Number The position for ordering in the server list. <code>parent</code> Channel The parent channel. This must be a channel category. <code>slowmode</code> Number The slowmode of the channel. <code>auto_archive_duration</code> Number The auto archive duration of the thread channel in minutes. Must be one of 60, 1440, 4320 or 10080. Only works for threads. <code>archived</code> Boolean Whether the thread is archived. <code>locked</code> Boolean Whether the thread is locked. <code>invitable</code> Boolean Whether the thread is invitable. <code>pinned</code> Boolean Whether the thread is pinned. <code>default_threads_slowmode</code> Number Default slowmode for threads created inside this channel. <code>tag_required</code> Boolean Whether a tag is required for posts created in this channel. Only works for forum channels. <code>default_sort_order</code> String The default sort order of posts in this channel. Can be <code>recent_activity</code> or <code>creation_time</code> Only works for forum channels. <code>default_reaction</code> Emoji object The default sort order of posts in this channel. Can be <code>recent_activity</code> or <code>creation_time</code> Only works for forum channels. <code>bitrate</code> Number The bitrate of this channel. Only works for voice channels. <code>user_limit</code> Number The maximum number of users allowed in this channel. Only works for voice channels. <code>reason</code> String The audio-log reason for this update."},{"location":"schemas/color/","title":"Color","text":"<p><code>color</code></p> <p>Can also be parsed directly from a list (<code>[r, g, b]</code>), or a number (<code>0xRRGGBB</code>).</p>"},{"location":"schemas/color/#schema-fields","title":"Schema fields","text":"Key Type Description <code>r</code> Number Red component. <code>g</code> Number Green component. <code>b</code> Number Blue component."},{"location":"schemas/embed/","title":"Embed","text":"<p><code>embed</code></p> <p>Used to create an embed.</p>"},{"location":"schemas/embed/#schema-fields","title":"Schema fields","text":"Key Type Description <code>title</code> String The title of the embed. <code>url</code> String The URL redirect when clicking on the embed title. <code>description</code> String The description below the title. <code>author</code> Embed author object The author shown on top of the embed. <code>fields</code> List of Embed field objects The fields inside the embed. <code>color</code> Color object The color of the embed. <code>footer</code> Embed footer object The footer shown at the bottom of the embed. <code>image</code> File object The image file to be used for the embed's image. <code>thumbnail</code> File object The image file to be used for the embed's thumbnail. <code>timestamp</code> Timestamp object The timestamp of the embed."},{"location":"schemas/embed/#author","title":"Author","text":"<p><code>embed_author</code></p> <p>Used to create the author in an embed.</p> <p>Can also be parsed directly from a User value, or a string (which will only set <code>name</code>).</p>"},{"location":"schemas/embed/#schema-fields_1","title":"Schema fields","text":"Key Type Description <code>name</code> String The display name of the author. <code>url</code> String The URL link when clicking on the author name. <code>icon</code> File object The image file to use for the author icon."},{"location":"schemas/embed/#field","title":"Field","text":"<p><code>embed_field</code></p> <p>Used to create a field in an embed.</p>"},{"location":"schemas/embed/#schema-fields_2","title":"Schema fields","text":"Key Type Description <code>name</code> String The name/title of this field. <code>value</code> String The value/description of this field. <code>inline</code> Boolean Whether this field should be inline."},{"location":"schemas/embed/#footer","title":"Footer","text":"<p>Used to create the footer in an embed.</p>"},{"location":"schemas/embed/#schema-fields_3","title":"Schema fields","text":"<p><code>embed_footer</code></p> Key Type Description <code>text</code> String The footer text. <code>icon</code> File object The image file to use for the footer icon."},{"location":"schemas/emoji/","title":"Emoji","text":"<p><code>emoji</code></p> <p>Emojis can be parsed directly from an Emoji value or a string. When parsing from a string, the following formats are allowed:</p> <ul> <li>Unicode emoji string: <code>'\ud83d\ude03'</code></li> <li>Unicode emoji codepoint notation: <code>'U+1F602'</code></li> <li>Unicode emoji from escape codes: <code>'&amp;#92;uD83D&amp;#92;uDE03'</code></li> <li>Custom emoji: <code>'&lt;:dog:123456789123456789&gt;'</code></li> <li>Animated emoji: <code>'&lt;a:dance:123456789123456789&gt;'</code></li> </ul> <p>It can also be parsed from a map schema as usual:</p>"},{"location":"schemas/emoji/#schema-fields","title":"Schema fields","text":"Key Type Description <code>name</code> String The name of a custom emoji. Must be provided with an <code>id</code>. <code>id</code> String The id of a custom emoji. <code>unicode</code> String The unicode emoji as a string. <code>animated</code> Boolean Whether the custom emoji is animated"},{"location":"schemas/file/","title":"File","text":"<p><code>file</code></p> <p>Used for resolving a file from various sources for use in discord attachments, embed images and more.</p> <p>Files can come from scarpet's resource system, urls, raw bytes or from an image value from Scarpet Graphics. You can only provide one of <code>file</code>, <code>url</code>, <code>string</code>, <code>base64</code> and <code>image</code>.</p> <p>Files can also be parsed directly from an image or string value. String values will be used as <code>url</code> if it matches the url schema. Otherwise, it is used as <code>file</code>.</p>"},{"location":"schemas/file/#schema-fields","title":"Schema fields","text":"Key Type Description <code>file</code> String The file path of the scarpet resource. This works the same way as the first parameter of <code>read_file</code>, except that the file extension must always be given. <code>file_shared</code> Boolean Whether the shared resource folder should be use for <code>file</code>. If true, this resolves the file like <code>read_file</code> does with a type prefixed with <code>shared_</code>. Defaults to false. <code>url</code> String The URL of the file. Depending on where this file is used, it might be downloaded or just provided by the url. <code>string</code> String The file contents as a string. If provided, the string content will be used for the file as UTF-8. <code>base64</code> String Base64 String with the binary data to be used for the file. <code>image</code> Image value from Scarpet-Graphics Base64 String with the binary data to be used for the file. <code>image_type</code> String The image format to be used for <code>image</code> serialization. Can be <code>jpeg</code>, <code>png</code>, <code>webp</code>, <code>gif</code> and some other variants of jpeg."},{"location":"schemas/message-content/","title":"Message content","text":"<p><code>message_content</code></p> <p>Used to create a message's content.</p> <p>Can also be parsed directly from a String, which is equivalent to only setting <code>content</code>.</p>"},{"location":"schemas/message-content/#schema-fields","title":"Schema fields","text":"Key Type Description <code>content</code> String The content of the message. <code>attachments</code> List of Attachment objects The attachments in the message. <code>stickers</code> List of Stickers or Numbers The stickers in the message, specified by values or IDs. <code>embeds</code> List of Embed objects The embeds in the message. <code>components</code> List of Lists of Component objects The rows of containers with components.<sup>1</sup> <code>allowed_mentions</code> Allowed mentions object Allowed mentions of the message. <code>referenced_message</code> Message The message to reply to or forward, depending on <code>message_reference_type</code>. <code>message_reference_type</code> String <code>default</code> for replying to the <code>referenced_message</code> or <code>forward</code> for forwarding it. <code>nonce</code> String The nonce of the message. <code>tts</code> Boolean Whether this message should be read by text-to-speech. <code>ephemeral</code> Boolean Whether this message should only be visible to the user who invoked the interaction.<sup>2</sup> <code>suppress_embeds</code> Boolean Whether embeds should not be included. <code>suppress_notifications</code> Boolean Whether this message should suppress triggering push and desktop notifications."},{"location":"schemas/message-content/#allowed-mentions","title":"Allowed mentions","text":"<p><code>allowed_mentions</code></p> <p>Used for configuring allowed mentions.</p> <p>Note</p> <p>All boolean values are <code>false</code> by default when allowed mentions is specified in your message content.  Otherwise when unspecified, they are <code>true</code> by default.</p>"},{"location":"schemas/message-content/#schema-fields_1","title":"Schema fields","text":"Key Type Description <code>mention_roles</code> Boolean Whether roles can be mentioned. (Defaults to false) <code>mention_users</code> Boolean Whether users can be mentioned. (Defaults to false) <code>mention_channels</code> Boolean Whether channels can be mentioned. (Defaults to false) <code>mention_emojis</code> Boolean Whether emojis can be mentioned. (Defaults to false) <code>mention_slash_commands</code> Boolean Whether slash commands can be mentioned. (Defaults to false) <code>mention_here</code> Boolean Whether @here can be mentioned. (Defaults to false) <code>mention_everyone</code> Boolean Whether @everyone can be mentioned. (Defaults to false) <code>mention_replied_user</code> Boolean Whether the author of the replied to message (<code>reply_to</code>) should be mentioned. (Defaults to false) <code>roles</code> List of Strings Roles that should be mentioned, specified by their IDs. <code>users</code> List of Strings Users that should be mentioned, specified by their IDs. <ol> <li> <p>Text inputs are not supported.\u00a0\u21a9</p> </li> <li> <p>Only for interactions.\u00a0\u21a9</p> </li> </ol>"},{"location":"schemas/modal/","title":"Modal","text":"<p><code>modal</code></p> <p>Used for creating a modal.</p>"},{"location":"schemas/modal/#schema-fields","title":"Schema fields","text":"Key Type Description <code>id</code> String The ID for the modal. Used to identify when submitted. <code>title</code> String The title of the modal popup. <code>components</code> List of Lists of Component objects The rows of containers with components.<sup>1</sup> <ol> <li> <p>Only supports text input components.\u00a0\u21a9</p> </li> </ol>"},{"location":"schemas/presence-updater/","title":"Presence updater","text":"<p><code>presence_updater</code></p> <p>Used for updating the bot's activity and status with <code>dc_update_presence</code>.</p>"},{"location":"schemas/presence-updater/#schema-fields","title":"Schema fields","text":"Key Type Description <code>status</code> String If present, the status type to set for the bot. <code>activity_type</code> String If present, the activity type to set for the bot. Defaults to <code>playing</code>. <code>activity_name</code> String If present, the name to show in the activity text. <code>activity_url</code> String If present, the url of the activity. Only used for the <code>streaming</code> type and opened when clicking a \"watch\" button on the bot's profile."},{"location":"schemas/presence-updater/#status-types","title":"Status types","text":"String Description <code>online</code> Shows up as a green circle on the bot. <code>idle</code> Shows up as a yellow moon on the bot. <code>do_not_disturb</code> Shows up as a red circle on the bot. <code>invisible</code> Shows up just like <code>offline</code> to other users. <code>offline</code> Shows up as a gray hollow circle on the bot."},{"location":"schemas/presence-updater/#activity-types","title":"Activity types","text":"String Description <code>playing</code> Shows up as \"Playing [<code>activity_name</code>]\" <code>streaming</code> Shows up as \"Streaming [<code>activity_name</code>]\" and shows a \"Watch\" button with the <code>activity_url</code>. <code>listening</code> Shows up as \"Listening [<code>activity_name</code>]\" <code>watching</code> Shows up as \"Watching [<code>activity_name</code>]\" <code>competing</code> Shows up as \"Competing in [<code>activity_name</code>]\""},{"location":"schemas/respond-later-data/","title":"Respond later data","text":"<p><code>respond_later_data</code></p> <p>Used for the <code>data</code> parameter in <code>dc_respond_interaction</code> with <code>type</code> being <code>respond_later</code>.</p>"},{"location":"schemas/respond-later-data/#schema-fields","title":"Schema fields","text":"Key Type Description <code>ephemeral</code> Boolean Whether this message should only be visible to the user who invoked the interaction. Defaults to false."},{"location":"schemas/thread/","title":"Thread","text":"<p><code>thread</code></p> <p>Used for creating a thread in a channel.</p>"},{"location":"schemas/thread/#schema-fields","title":"Schema fields","text":"Key Type Description <code>name</code> String The name of the thread(max 100 characters). <code>is_private</code> Boolean Whether the thread should be private (Defaults to false) <code>invitable</code> Boolean Whether non-moderators can add other non-moderators to the thread.(Exclusive to <code>server_private_thread</code>) <code>auto_archive_duration</code> Number The duration in minutes until the thread gets archived without activity. <code>slowmode</code> Number The slow mode time in seconds.(0 - 21600) <code>reason</code> String The audit log reason."},{"location":"schemas/timestamp/","title":"Timestamp","text":"<p><code>timestamp</code></p> <p>Can also be parsed directly from a number, or a string <code>'now'</code>, which will parse to the current time.</p>"},{"location":"schemas/timestamp/#schema-fields","title":"Schema fields","text":"Key Type Description <code>epoch_millis</code> Number Milliseconds since the epoch time."},{"location":"schemas/commands/message-context-menu-builder/","title":"Message context menu builder","text":"<p><code>message_context_menu_builder</code></p> <p>Used to create a message context menu command.</p>"},{"location":"schemas/commands/message-context-menu-builder/#schema-fields","title":"Schema fields","text":"Key Type Description <code>name</code> String The name of the menu."},{"location":"schemas/commands/slash-command-builder/","title":"Slash command builder","text":"<p><code>slash_command_builder</code></p> <p>Used to create a slash command.</p>"},{"location":"schemas/commands/slash-command-builder/#schema-fields","title":"Schema fields","text":"Key Type Description <code>name</code> String The name of the slash command. <code>description</code> String The description of the slash command. <code>options</code> List of Option schemas The sub-options of the slash command."},{"location":"schemas/commands/slash-command-builder/#option","title":"Option","text":"<p><code>slash_command_option</code></p> <p>There are two things this can do, depending on the <code>type</code>:</p> <p>Either add subcommand literals, or parameters to the command. Sub command groups are always on the first \"layer\", while subcommands are always one layer deeper than sub command groups.</p> <p>Note that this is quite limited in comparison to Minecraft commands. All paths of the command tree have to have either just a subcommand, or a subcommand group with subcommands each. This means that the length of the command chains (without the other options that aren't subcommands) has to be equal for all subcommands.</p> <p>For more info, check this documentation.</p>"},{"location":"schemas/commands/slash-command-builder/#schema-fields_1","title":"Schema fields","text":"Key Type Description <code>type</code> String The type of slash command option. <code>name</code> String The name of the option. <code>description</code> String The description of the option. <code>required</code> Boolean(<code>false</code> by default) Whether this option is required to be specified. <code>autocomplete</code> Boolean(<code>false</code> by default) Whether this option should autocomplete. <code>options</code> List of Option schemas Sub-options to this sub-command/group.<sup>1</sup> <code>choices</code> List of Option choice object Autocompletable choices for this command option."},{"location":"schemas/commands/slash-command-builder/#option-types","title":"Option types","text":"String Description <code>sub_command</code> A subcommand <code>sub_command_group</code> A subcommand group for containing subcommands as options <code>string</code> Any string <code>integer</code> Any integer between -2^53 and 2^53 <code>boolean</code> true or false <code>user</code> Select a user <code>channel</code> All channel types + categories <code>role</code> Select a role <code>mentionable</code> Select a user/role <code>number</code> A double value <code>attachment</code> Upload an attachment"},{"location":"schemas/commands/slash-command-builder/#option-choice","title":"Option choice","text":"<p><code>slash_command_option_choice</code></p> Key Type Description <code>name</code> String The visible autocompleted filled in choice for the option. <code>value</code> String The value that will be received in the slash command event as the option value. <ol> <li> <p>Only for <code>SUB_COMMAND</code> and <code>SUB_COMMAND_GROUP</code> types.\u00a0\u21a9</p> </li> </ol>"},{"location":"schemas/commands/user-context-menu-builder/","title":"User context menu builder","text":"<p><code>user_context_menu_builder</code></p> <p>Used to create a user context menu command.</p>"},{"location":"schemas/commands/user-context-menu-builder/#schema-fields","title":"Schema fields","text":"Key Type Description <code>name</code> String The name of the menu."},{"location":"schemas/components/button/","title":"Button component","text":"<p><code>button</code></p> <p>Used for creating a button component.</p>"},{"location":"schemas/components/button/#schema-fields","title":"Schema fields","text":"Key Type Description <code>component</code> String For buttons always <code>button</code> <code>id</code> String The ID of the button. Used to identify when interacted with.<sup>1</sup> <code>label</code> String The text shown on the button. <code>disabled</code> Boolean(<code>false</code> by default) Whether this button is disabled. <code>style</code> String(<code>secondary</code> by default) The style of the button. <code>emoji</code> Emoji object The emoji shown on the button. <code>url</code> String The URL opened when clicking the button.<sup>2</sup>"},{"location":"schemas/components/button/#button-styles","title":"Button styles","text":"String Preview <code>primary</code> <code>secondary</code> <code>success</code> <code>danger</code> <code>link</code> <ol> <li> <p>Not required for <code>URL</code> style.\u00a0\u21a9</p> </li> <li> <p>Only required for <code>URL</code> style.\u00a0\u21a9</p> </li> </ol>"},{"location":"schemas/components/component/","title":"Base component","text":"<p><code>component</code></p> <p>Used for creating a component, which contains additional values from the used component.</p> <p>Can be either a Button, Select menu, or a Text input.</p>"},{"location":"schemas/components/component/#schema-fields","title":"Schema fields","text":"Key Type Description <code>component</code> String The type of the component. <p>Values from the used schema must be included, like so:</p> <pre><code>component = {\n    'component' -&gt; 'button',\n    'id' -&gt; 'blurple_button',\n    'style' -&gt; 'primary',\n    'label' -&gt; 'Blurple button',\n    'emoji' -&gt; '\ud83d\udeaa'\n},\n</code></pre>"},{"location":"schemas/components/component/#component-types","title":"Component types","text":"String Description <code>button</code> Button <code>string_select</code> Select an item <code>user_select</code> Select a user <code>role_select</code> Select a role <code>mentionable_select</code> Select a user/role <code>channel_select</code> Select a channel <code>text_input</code> Text input"},{"location":"schemas/components/select-menu/","title":"Select menu component","text":"<p><code>select_menu</code></p> <p>Used for creating a select menu component.</p>"},{"location":"schemas/components/select-menu/#schema-fields","title":"Schema fields","text":"Key Type Description <code>component</code> String One of the select menu component types ending with <code>_select</code> <code>id</code> String The ID of the select menu. Used to identify when interacted with. <code>options</code> List of Option objects All options selectable in this select menu.<sup>1</sup> <code>channel_types</code> List of Strings The channel types allowed if this is a <code>channel_select</code> component. <code>min</code> Number The minimum number of options that need to be selected. <code>max</code> Number The maximum number of options that can be selected. <code>placeholder</code> String The text displayed when nothing is selected yet."},{"location":"schemas/components/select-menu/#option","title":"Option","text":"<p><code>select_menu_option</code></p> <p>Used for creating a select menu option.</p>"},{"location":"schemas/components/select-menu/#schema-fields_1","title":"Schema fields","text":"Key Type Description <code>value</code> String The internal value of the option. <code>label</code> String The label of the option. <code>emoji</code> Emoji object The emoji displayed next to the label. <code>description</code> String The description of the option. <code>default_option</code> Boolean Whether option this is selected by default. <ol> <li> <p>Only for <code>string_select</code> type.\u00a0\u21a9</p> </li> </ol>"},{"location":"schemas/components/text-input/","title":"Text input component","text":"<p><code>text_input</code></p> <p>Used for creating a text input component.</p> <p>Can only be used inside modals.</p>"},{"location":"schemas/components/text-input/#schema-fields","title":"Schema fields","text":"Key Type Description <code>component</code> String For a text input always <code>text_input</code> <code>id</code> String The ID of the text input. <code>style</code> String The style of the text input. <code>label</code> String The label of the text input. <code>min_length</code> Number The minimum length of the text in the text input. <code>max_length</code> Number The maximum length of the text in the text input. <code>required</code> Boolean Whether this text input is required. <code>value</code> String The pre-filled value for the text input. <code>placeholder</code> String The placeholder text shown if the text input is empty."},{"location":"schemas/components/text-input/#text-input-styles","title":"Text input styles","text":"String Description <code>short</code> Single-line input <code>paragraph</code> Multi-line input"},{"location":"schemas/webhooks/webhook-message-profile/","title":"Webhook message profile","text":"<p><code>webhook_message_profile</code></p> <p>Used for updating a webhook's profile when sending a message.</p>"},{"location":"schemas/webhooks/webhook-message-profile/#schema-fields","title":"Schema fields","text":"Key Type Description <code>name</code> String The display name of the webhook. <code>avatar</code> String The image URL used for the webhook's avatar."},{"location":"schemas/webhooks/webhook-profile-updater/","title":"Webhook profile updater","text":"<p><code>webhook_profile_updater</code></p> <p>Used for updating a webhook's profile.</p>"},{"location":"schemas/webhooks/webhook-profile-updater/#schema-fields","title":"Schema fields","text":"Key Type Description <code>name</code> String The display name of the webhook. <code>avatar</code> File object The image file to be used for the webhook's avatar. <code>reason</code> String The reason shown in audit log.[^1]"},{"location":"schemas/webhooks/webhook-profile/","title":"Webhook profile","text":"<p><code>webhook_profile</code></p> <p>Used for creating a webhook.</p>"},{"location":"schemas/webhooks/webhook-profile/#schema-fields","title":"Schema fields","text":"Key Type Description <code>name</code> String The display name of the webhook. <code>avatar</code> File object The image file to be used for the webhook's avatar. <code>reason</code> String The reason shown in audit log.[^1]"},{"location":"values/attachment/","title":"Attachment","text":"<p><code>dc_attachment</code></p> <p>Represents an attachment from a message or slash command.</p>"},{"location":"values/attachment/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>file_name</code> String The name of the attachment. <code>size</code> Number The size as the number of bytes of the attached file. <code>url</code> String The URL of the attachment. <code>proxy_url</code> String The proxy URL of the file. <code>is_image</code> Boolean Whether this file is an image. <code>width</code> Number, Null The width of the attached image.Returns <code>null</code> if the attachment is not an image. <code>height</code> Number, Null The height of the attached image.Returns <code>null</code> if the attachment is not an image. <code>is_spoiler</code> Boolean Whether this file is marked as a spoiler. <code>download</code> String Downloads the file's bytes as a string.<sup>1</sup>Throws an exception on failure. <ol> <li> <p>Querying this property can freeze the game. Query it in a <code>task</code> to avoid freezing your game.\u00a0\u21a9</p> </li> </ol>"},{"location":"values/channel/","title":"Channel","text":"<p><code>dc_channel</code></p> <p>Represents a server channel, thread, DMs, or channel category.</p> <p>Threads and DMs are considered as channels.</p>"},{"location":"values/channel/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>name</code> String The name of the channel. <code>topic</code> String The topic/description of the channel. <code>id</code> String The ID of the channel. <code>mention_tag</code> String The mention tag for the channel. Used to directly link channels in a message. <code>server</code> Server, Null The server this channel is in.Returns <code>null</code> if this is a private channel. <code>type</code> String The type of the channel. <code>webhooks</code> List of Webhooks The webhooks in this channel.Throws an exception on failure. <code>nsfw</code> Boolean Whether this channel is age-restricted. <code>position</code> Number The position in the server channel list."},{"location":"values/channel/#channel-types","title":"Channel types","text":"String Description <code>text</code> Text channel <code>private</code> Direct messages with another user <code>voice</code> Voice channel in a server <code>group</code> Group DM channel <code>category</code> Server channel category <code>news</code> Server news channel <code>stage</code> Server stage voice channel <code>guild_news_thread</code> Server news thread <code>guild_public_thread</code> Server public thread <code>guild_private_thread</code> Server private thread <code>forum</code> Server forum channel <code>media</code> Media channel"},{"location":"values/command/","title":"Command","text":"<p><code>dc_command</code></p> <p>Represents a command.</p>"},{"location":"values/command/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>id</code> String The ID of the command. <code>name</code> String The name of the command. <code>description</code> String The description of the command. <code>type</code> String The type of the command <code>server</code> Server, Null The server this application command is in.Returns <code>null</code> if it's a global application command. <code>options</code> List of Strings The names of the slash command options.<sup>1</sup>"},{"location":"values/command/#command-types","title":"Command types","text":"String Description <code>slash</code> A slash command <code>user</code> A user context menu command <code>message</code> A message context menu command <ol> <li> <p>Didn't bother adding a slash command option value since nobody is gonna use it anyway.   If you need it, make an issue or let me know on Discord, and I'll add it.\u00a0\u21a9</p> </li> </ol>"},{"location":"values/emoji/","title":"Emoji","text":"<p><code>dc_emoji</code></p> <p>Represents a Unicode emoji, or a custom emoji from a server.</p>"},{"location":"values/emoji/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>id</code> Number, Null The ID of this emoji.Returns <code>null</code> if it's a custom emoji. <code>mention_tag</code> String The mention tag for the emoji. Used to insert the emoji into messages. <code>unicode</code> String, Null The emoji as a unicode character.Returns <code>null</code> if it's a custom emoji. <code>is_animated</code> Boolean Whether this emoji is animated. <code>is_unicode</code> Boolean Whether this emoji is a unicode emoji. <code>is_custom</code> Boolean Whether this emoji is from a server. <code>type</code> String <code>unicode</code> or <code>custom</code>"},{"location":"values/member/","title":"Member","text":"<p><code>dc_user</code></p> <p>Represents a regular user, or a bot.</p>"},{"location":"values/member/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>user</code> User The user value of this member. <code>server</code> Server The server of the member. <code>color</code> String The display color of the member as a hex string. <code>roles</code> List of Role The roles this member has assigned. <code>nickname</code> String or null The nickname of the member, if present. <code>effective_name</code> String The display name of the member as displayed in the discord client. <code>online_status</code> String The online status of the member. <code>is_boosting</code> Boolean Whether the member is a server booster. <code>is_owner</code> Boolean Whether the member is the server owner. <code>is_pending</code> Boolean Whether this member hasn't passed the guild's Membership Screening requirements. <code>is_self</code> Boolean Whether the member is the currently logged in bot account itself.Useful to prevent bots from replying to itself. <code>timeout_end</code> Number or null Unix timestamp when the timeout of the member ends. <code>avatar_url</code> String or null The url of the per-server avatar of the user. <code>effective_avatar_url</code> String The url of the displayed avatar of the user. If the user has a per-server avatar, it is returned, otherwise the global avatar or default user avatar is returned."},{"location":"values/member/#online-status-values","title":"Online status values","text":"<ul> <li><code>online</code></li> <li><code>idle</code></li> <li><code>do_not_disturb</code></li> <li><code>invisible</code></li> <li><code>offline</code></li> <li><code>unknown</code></li> </ul>"},{"location":"values/message/","title":"Message","text":"<p><code>dc_message</code></p> <p>Represents a message sent by a user, bot, webhook, or server.</p>"},{"location":"values/message/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>content</code> String The content of the message.All emojis, mentions, and channels will appear with their ID. <code>readable_content</code> String The content of the message.All emojis, mentions, and channels will appear with a more readable representation.<sup>1</sup> <code>stripped_content</code> String The content of the message with markdown formatting will be stripped. <code>id</code> String The ID of the message. <code>channel</code> Channel The channel this message was sent in. <code>user</code> User, Null The user that sent this message.Returns <code>null</code> if not sent or triggered by a user, or if the user is not cached. <code>member</code> Member, Null The member that sent this message.Returns <code>null</code> if not sent or triggered by a server member in a server channel. <code>webhook_id</code> Number, Null The webhook that sent this message, represented by its ID.<sup>2</sup>Returns <code>null</code> if not sent by a webhook. <code>server</code> Server The server this message was written in. <code>nonce</code> String The nonce of this message. <code>attachments</code> List of Attachments The attachments in this message. <code>sticker_ids</code> List of Strings The stickers in this message represented with their IDs. <code>stickers</code> List of Stickers The stickers in this message. <code>referenced_message</code> Message The message that is being referenced or replied to. <code>type</code> String The type of the message. <code>link</code> String The URL linking to the message. <code>flags</code> List of Strings The flags of the message. <code>creation_timestamp</code> Number The timestamp in unix time milliseconds since message creation. <code>edit_timestamp</code> Number The timestamp in unix time milliseconds since the message was last edited. <code>position</code> Number The position of the message in a thread. <ol> <li> <p>If a user is not cached, mentions to them may not get parsed.\u00a0\u21a9</p> </li> <li> <p>To get the Webhook value, use <code>dc_webhook_from_id</code>.\u00a0\u21a9</p> </li> </ol>"},{"location":"values/reaction/","title":"Reaction","text":"<p><code>dc_reaction</code></p> <p>Represents a reaction on a message.</p>"},{"location":"values/reaction/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>emoji</code> Emoji The emoji of this reaction. <code>count</code> Number The amount of reactions with this emoji. <code>message</code> Message The message this reaction is attached to."},{"location":"values/role/","title":"Role","text":"<p><code>dc_role</code></p> <p>Represents a server role.</p>"},{"location":"values/role/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>name</code> String The name of the role. <code>id</code> String The ID of the role. <code>mention_tag</code> String The tag used to mention this role. <code>color</code> String The hex color of the role color. <code>position</code> Number The position of this role as it is sorted in the server settings. <code>server</code> Server The server of this role. <code>members</code> List of Members All server members with the role. <code>users</code> List of Users All users with the role. <code>displayed_separately</code> Boolean Whether users with this role are shown separately on the member list. <code>is_everyone_role</code> Boolean Whether this role is the @everyone role. <code>managed</code> Boolean Whether this role is managed by an integration (e.g. bots). <code>mentionable</code> Boolean Whether this role is mentionable by users."},{"location":"values/server/","title":"Server","text":"<p><code>dc_server</code></p> <p>Represents a server.</p>"},{"location":"values/server/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>name</code> String The name of the server. <code>id</code> String The ID of the server. <code>members</code> List of Members All users in this server.(Requires the <code>GUILD_MEMBERS</code> intent) <code>users</code> List of Users All users in this server.(Requires the <code>GUILD_MEMBERS</code> intent) <code>channels</code> List of Channels All channels in this server. <code>roles</code> List of Roles All roles in this server. <code>webhooks</code> List of Webhooks All webhooks in this server.Throws an exception on failure. <code>slash_commands</code> List of Slash commands All slash commands in this server.Throws an exception on failure. <code>emojis</code> List of Emojis All emojis in this server. <code>sticker</code> List of Stickers All stickers in this server."},{"location":"values/sticker/","title":"Sticker","text":"<p><code>dc_sticker</code></p> <p>Represents an official Discord sticker or a custom sticker from a server.</p>"},{"location":"values/sticker/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>id</code> String The ID of the sticker. <code>name</code> String The name of the sticker. <code>description</code> String The description of the sticker. <code>tags</code> String The autocompletion/suggestion tags of the sticker. <code>sort_value</code> Number, Null The sort order in the sticker pack.Returns <code>null</code> if the sticker is custom. <code>format_type</code> String The format type of the sticker. <code>pack_id</code> Number, Null The ID of the sticker pack this sticker is in.Returns <code>null</code> if the sticker is custom. <code>server</code> Server, Null The server this sticker is in.Returns <code>null</code> if the sticker is official. <code>type</code> String The type of sticker. <code>user</code> User, Null The user who created this sticker.Returns <code>null</code> if the sticker is official."},{"location":"values/sticker/#sticker-types","title":"Sticker types","text":"String Description <code>standard</code> An official Discord sticker made by Discord <code>guild</code> A custom sticker made in a server <code>unknown</code>"},{"location":"values/sticker/#format-types","title":"Format types","text":"<ul> <li><code>png</code></li> <li><code>apng</code></li> <li><code>lottie</code></li> <li><code>gif</code></li> <li><code>unknown</code></li> </ul>"},{"location":"values/user/","title":"User","text":"<p><code>dc_user</code></p> <p>Represents a regular user, or a bot.</p>"},{"location":"values/user/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>name</code> String The name of the user. <code>mention_tag</code> String The mention tag to mention a user in a message. <code>id</code> String The ID of the user. <code>avatar</code> String The image URL used in the user's avatar picture. <code>is_bot</code> Boolean Whether the user is a bot. <code>is_self</code> Boolean Whether the user is the currently logged in bot account itself.Useful to prevent bots from replying to itself. <code>private_channel</code> Channel The private messages (DMs) channel with the user.<sup>1</sup>Throws an exception on failure. <ol> <li> <p>Querying this property can freeze the game. Query it in a <code>task</code> to avoid freezing your game.   It does not freeze the game if the channel has already been created.\u00a0\u21a9</p> </li> </ol>"},{"location":"values/webhook/","title":"Webhook","text":"<p><code>dc_webhook</code></p> <p>Represents a webhook in a channel.</p>"},{"location":"values/webhook/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>id</code> String The ID of the webhook. <code>channel</code> Channel The channel the webhook is in. <code>type</code> String The type of the webhook. <code>token</code> String The token of the webhook.(Only works for incoming webhooks) <code>url</code> String The URL of the webhook.(Only works for incoming webhooks)"},{"location":"values/webhook/#webhook-types","title":"Webhook types","text":"<ul> <li><code>incoming</code></li> <li><code>follower</code></li> <li><code>unknown</code></li> </ul>"},{"location":"values/interactions/button/","title":"Button interaction","text":"<p><code>dc_button_interaction</code></p> <p>Represents an interaction from a user clicking a button from <code>__on_discord_button</code>.</p>"},{"location":"values/interactions/button/#queryable-properties","title":"Queryable properties","text":"<p>Also has all properties from the base interaction</p> Property Type Description <code>custom_id</code> String The custom ID of the button. <code>message</code> Message The message this interaction is attached to."},{"location":"values/interactions/interaction/","title":"Base interaction","text":"<p>Represents an interaction. All specialized interactions have these properties, along with their additional properties.</p> <p>Used for getting its details, and responding with <code>dc_respond_interaction</code>.</p>"},{"location":"values/interactions/interaction/#queryable-properties","title":"Queryable properties","text":"Property Type Description <code>id</code> String The ID of the interaction. <code>channel</code> Channel The channel this interaction was made in. <code>user</code> User The user who made the interaction. <code>member</code> Member The member who made the interaction. <code>token</code> String The continuation token internally used for responding to this interaction. <code>server</code> Server The server this interaction was made in. <code>locale</code> String The locale (e.g. en-US) of the user executing the interaction. <code>creation_timestamp</code> Number The timestamp in unix time milliseconds since interaction."},{"location":"values/interactions/message-context-menu/","title":"Message context menu interaction","text":"<p><code>dc_message_context_menu_interaction</code></p> <p>Represents an interaction of an executed message context menu command from <code>__on_discord_message_context_menu</code>.</p>"},{"location":"values/interactions/message-context-menu/#queryable-properties","title":"Queryable properties","text":"<p>Also has all properties from the base interaction</p> Property Type Description <code>command_id</code> String The ID of the application command. <code>command_name</code> String The name of the application command. <code>target</code> Message The message that the application command was used on."},{"location":"values/interactions/modal/","title":"Modal interaction","text":"<p><code>dc_modal_interaction</code></p> <p>Represents an interaction from a user's response to a modal from <code>__on_discord_modal</code>.</p>"},{"location":"values/interactions/modal/#queryable-properties","title":"Queryable properties","text":"<p>Also has all properties from the base interaction</p> Property Type Description <code>custom_id</code> String The custom ID of the modal. <code>input_values_by_id</code> Map All text inputs and their values in a key-value format.(e.g. <code>'text_input_id' -&gt; 'Text here'</code>)"},{"location":"values/interactions/select-menu/","title":"Select menu interaction","text":"<p><code>dc_select_menu_interaction</code></p> <p>Represents an interaction from a user inputting into a select menu from <code>__on_discord_select_menu</code>.</p>"},{"location":"values/interactions/select-menu/#queryable-properties","title":"Queryable properties","text":"<p>Also has all properties from the base interaction</p> Property Type Description <code>custom_id</code> String The custom ID of the select menu. <code>chosen</code> List All selected options. <code>options</code> List of Strings All values of options in the select menu.<sup>1</sup> <code>min</code> Number Minimum amount of selected entries for this select menu. <code>max</code> Number Maximum amount of selected entries for this select menu. <code>placeholder</code> String The placeholder text of this select menu. <code>message</code> Message The message this interaction is attached to. <code>component_type</code> String The type of the component for distinguishing between the different types of select menus. <ol> <li> <p>Only applicable for <code>select_menu_string</code>.\u00a0\u21a9</p> </li> </ol>"},{"location":"values/interactions/slash-command/","title":"Slash command interaction","text":"<p><code>dc_slash_command_interaction</code></p> <p>Represents an interaction of an executed slash command from <code>__on_discord_slash_command</code>.</p>"},{"location":"values/interactions/slash-command/#queryable-properties","title":"Queryable properties","text":"<p>Also has all properties from the base interaction</p> Property Type Description <code>command_id</code> String The ID of the application command. <code>command_name</code> String The name of the application command. <code>sub_command</code> String The name of the subcommand or null if the command is not a subcommand. <code>sub_command_group</code> String The name of the subcommand group or null if the command is not in a subcommand group. <code>arguments</code> List of Options The selected options of the command. <code>arguments_by_name</code> Map of Options A map of all options (and sub-options), with the key being their name."},{"location":"values/interactions/slash-command/#option","title":"Option","text":"<p><code>dc_slash_command_interaction_option</code></p> <p>Represents a user-chosen option of an executed slash command.</p>"},{"location":"values/interactions/slash-command/#queryable-properties_1","title":"Queryable properties","text":"Property Type Description <code>name</code> String The name of the command option. <code>type</code> String The type of the option <code>value</code> String, Number, Boolean, User, Channel, Role, Attachment The value chosen by the user."},{"location":"values/interactions/user-context-menu/","title":"User context menu interaction","text":"<p><code>dc_user_context_menu_interaction</code></p> <p>Represents an interaction of an executed user context menu command from <code>__on_discord_user_context_menu</code>.</p>"},{"location":"values/interactions/user-context-menu/#queryable-properties","title":"Queryable properties","text":"<p>Also has all properties from the base interaction</p> Property Type Description <code>command_id</code> String The ID of the application command. <code>command_name</code> String The name of the application command. <code>target</code> User The user that the application command was used on."}]}